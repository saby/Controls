<div class="controls-Suggest_list {{_isSuggestListEmpty ? 'controls-Suggest_list_empty'}}">
    <ws:if data="{{_options.tabsOptions && (!_suggestListOptions || !_suggestListOptions.dialogMode)}}">
        <Controls.Container.Async templateName="Controls/tabs:Buttons">
            <ws:partial template="{{'Controls/tabs:Buttons'}}"
                        attr:class="controls-Suggest__tabs controls-Suggest__tabs_{{_layerName}}"
                        on:selectedKeyChanged="_tabsSelectedKeyChanged()"
                        style="primary"
                        displayProperty="{{_options.tabsOptions.displayProperty}}"
                        keyProperty="{{_options.tabsOptions.keyProperty}}"
                        source="{{_options.tabsOptions.source}}"
                        selectedKey="{{_suggestListOptions.tabsSelectedKey || _options.tabsOptions.selectedKey}}"/>
        </Controls.Container.Async>
    </ws:if>
    <Controls.dataSource:error.Container name="list" viewConfig="{{_suggestListOptions.errorConfig}}">
        <ws:partial template="{{_options.content}}"
                    scope="{{_suggestListOptions}}"
                    markedKey="{{_markedKey}}"
                    sourceController="{{_suggestListOptions.sourceController || _options.sourceController}}"
                    navigation="{{_navigation}}"
                    itemsReadyCallback="{{_itemsReadyCallback}}"
                    on:markedKeyChanged="_markedKeyChanged()">
            <ws:searchBreadCrumbsItemTemplate>
                <Controls.Container.Async templateName="Controls/treeGrid:SearchBreadCrumbsItemTemplate">
                <ws:partial template="{{ content.resolvedTemplate }}"
                        attr:class="controls-Suggest_breadCrumbs"
                        highlightOnHover="{{false}}"
                        scope="{{searchBreadCrumbsItemTemplate}}"
                        marker="{{false}}"/>
                </Controls.Container.Async>
            </ws:searchBreadCrumbsItemTemplate>
        </ws:partial>
    </Controls.dataSource:error.Container>

    <Controls.event:Listener event="inputKeydown" on:inputKeydown="_inputKeydown()"/>
</div>
