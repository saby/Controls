<ws:template name="localItemActionsTemplateForEdge">
    <div attr:class="{{itemData.getItemActionsClasses(itemData, itemActionsPosition, actionMenuIsShown, theme)}}">
        <div attr:class="{{itemData.getItemActionsWrapperClasses(itemData, itemActionsPosition, highlightOnHover, style,
            getContainerPaddingClass, itemActionsClass, itemPadding, toolbarVisibility, theme)}}">
            <ws:partial
                    template="wml!Controls/_list/ItemActions/resources/ItemActionsFor"
                    itemData="{{itemData}}"
                    needShowTitle="{{needShowTitle}}"
                    needShowIcon="{{needShowIcon}}"
                    size="{{size}}"
                    showedActions="{{itemData.itemActions.showed}}"/>
            <ws:if data ="{{itemData.isEditing && toolbarVisibility}}">
                <Controls.Container.Async templateName="Controls/editableArea:Buttons">
                    <ws:partial template="{{content.resolvedTemplate}}"
                                attr:class="controls-itemActionsV__wrapper-isEditing_theme-{{theme}}"
                                on:applyButtonClick="_applyEdit()"
                                on:closeButtonClick="_cancelEdit()"/>
                </Controls.Container.Async>
            </ws:if>
        </div>
    </div>
</ws:template>
<ws:template name="localItemActionsTemplate">
<div attr:class="controls-itemActionsV
            {{highlightOnHover !== false ? 'controls-itemActionsV_style_' + (style ? style : 'default') }}
            {{itemActionsPosition !== 'outside' ? (itemActionsClass ? itemActionsClass : 'controls-itemActionsV_position_bottomRight') : ''}}
            controls-itemActionsV_{{itemActionsPosition}}_theme-{{theme}}
            {{getContainerPaddingClass(itemActionsClass || 'controls-itemActionsV_position_bottomRight', itemPadding, theme)}}
            {{itemData.isEditing ? 'controls-itemActionsV_editing_theme-' + theme}}
            {{itemData.isEditing && toolbarVisibility ? 'controls-itemActionsV_editingToolbarVisible'}}
            {{itemData.isActive && actionMenuIsShown ? 'controls-itemActionsV_visible'}}
            {{itemData.isSwiped ? 'controls-itemActionsV_swiped'}}
            {{itemData.itemActionsColumnScrollDraw ? 'controls-itemActionsV_columnScrollDraw'}}">
    <div attr:class="controls-itemActionsV__wrapper">
        <ws:partial
                template="wml!Controls/_list/ItemActions/resources/ItemActionsFor"
                itemData="{{itemData}}"
                needShowTitle="{{needShowTitle}}"
                needShowIcon="{{needShowIcon}}"
                getTooltip="{{getTooltip}}"
                size="{{size}}"
                showedActions="{{itemData.itemActions.showed}}"/>
        <ws:if data ="{{itemData.isEditing && toolbarVisibility}}">
            <Controls.Container.Async templateName="Controls/editableArea:Buttons">
                <ws:partial template="{{content.resolvedTemplate}}"
                            attr:class="controls-itemActionsV__wrapper-isEditing_theme-{{theme}}"
                            on:applyButtonClick="_applyEdit()"
                            on:closeButtonClick="_cancelEdit()"/>
            </Controls.Container.Async>
        </ws:if>
    </div>
</div>
</ws:template>
<ws:template name="templateChooser">
<ws:if data="{{itemData.isIE12 && !isTile}}">
    <ws:partial template="localItemActionsTemplateForEdge"/>
</ws:if>
<ws:else>
    <ws:partial template="localItemActionsTemplate"/>
</ws:else>
</ws:template>
        <!-- TODO moved to Grid/Item.wml after complete task: https://online.sbis.ru/opendoc.html?guid=d473668a-3c9a-43b9-a59c-b994cbf873bd -->
<ws:if data="{{!!itemActionsContainerStyles}}">
<div class="controls-itemActionsV__container" style="{{itemActionsContainerStyles}}">
    <ws:partial template="templateChooser"/>
</div>
</ws:if>
<ws:else>
<ws:partial template="templateChooser"/>
</ws:else>
