<ws:template name="loadingIndicator">
    <div class="{{ _getLoadingIndicatorClasses(loadingIndicatorState) }}" style="{{ _getLoadingIndicatorStyles(loadingIndicatorState) }}" name="{{indicatorName}}LoadingIndicator">
        <ws:partial template="{{_options.loadingIndicatorTemplate}}"
                    showLoadingIndicator="{{_showLoadingIndicatorImage}}"
                    portionedSearchInProgress="{{_portionedSearchInProgress}}">
            <ws:contentTemplate>
                <div class="controls-BaseControl__abortSearch controls-BaseControl__abortSearch_theme-{{_options.theme}}" on:click="_abortSearch()">{[Прервать поиск]}</div>
            </ws:contentTemplate>
        </ws:partial>
    </div>
</ws:template>

<ws:template name="pagingTpl">
    <ws:if data="{{_pagingLabelData}}">
        <ws:if data="{{_options.navigation.viewConfig.totalInfo === 'extended'}}">
            <div class="controls-BaseControl_paging-label_theme-{{_options.theme}}">
                <div>{{_pagingLabelData.firstItemNumber}} - {{_pagingLabelData.lastItemNumber}} {{rk('из')}} {{_pagingLabelData.totalItemsCount}}, {{rk('по')}} </div>
                <Controls.dropdown:Input
                        attr:class="controls-BaseControl_paging-pageSizeChooser controls-BaseControl_paging-pageSizeChooser_theme-{{_options.theme}}"
                        keyProperty="id"
                        style="secondary"
                        displayProperty="title"
                        fontSize="s"
                        selectedKeys="{{_selectedPageSizeKey}}"
                        on:selectedKeysChanged="_changePageSize()"
                        source="{{_pageSizeSource}}">
                </Controls.dropdown:Input>
            </div>
        </ws:if>
        <ws:else>
            <div class="controls-BaseControl_paging-label_theme-{{_options.theme}}">{{rk('Всего')}} {{_pagingLabelData.totalItemsCount}}</div>
        </ws:else>
    </ws:if>
    <Controls.paging:Paging
        attr:class="controls-BaseControl__footerPaging_theme-{{_options.theme}}"
        showDigits = "{{!_options.navigation.sourceConfig.hasMore}}"
        showEndButton="{{_options.navigation.viewConfig.showEndButton}}"
        pagesCount = "{{_knownPagesCount}}"
        selectedPage = "{{_currentPage}}"
        on:selectedPageChanged="__pagingChangePage()" />
</ws:template>

<ws:template name="footerTemplateIf">
    <ws:if data="{{_loadingIndicatorState === 'all'}}">
        <ws:partial template="loadingIndicator"/>
    </ws:if>
    <ws:if data="{{_options.footerTemplate}}">
        <div class="controls-BaseControl__footer-content_theme-{{_options.theme}}">
            <ws:partial template="{{_options.footerTemplate}}"/>
        </div>
    </ws:if>
    <ws:if data="{{_pagingNavigation && _pagingNavigationVisible}}">
        <div class="controls-BaseControl__footerPaging_wrapper">
            <ws:if data="{{_options.columnScroll}}">
                <div class="controls-BaseControl_paging-wrapper_theme-{{_options.theme}}">
                    <ws:partial template="pagingTpl" />
                </div>
            </ws:if>
            <ws:else>
                <ws:partial template="pagingTpl" />
            </ws:else>
        </div>
    </ws:if>
    <ws:if data="{{_shouldDrawFooter}}">
        <ws:partial template="wml!Controls/_list/BaseControl/Footer" loadMoreCaption="{{_loadMoreCaption}}" theme="{{_options.theme}}"/>
    </ws:if>
</ws:template>
<ws:template name="multiSelectTplIf">
    <ws:if data="{{_options.multiSelectVisibility}}">
        <ws:partial template="wml!Controls/_list/BaseControl/multiSelect" scope="{{multiSelectTpl.templateOptions}}" />
    </ws:if>
</ws:template>
<ws:template name="emptyTemplateIf">
    <ws:if data="{{__needShowEmptyTemplate(_options.emptyTemplate, _listViewModel)}}">
        <div class="controls-BaseControl__emptyTemplate">
            <!-- Прокидываем items и filter в emptyTemplate для правильной работы системы помощи.
                 Прокидывание будет убрано по задаче https://online.sbis.ru/opendoc.html?guid=e5ae488e-f7ef-47fa-bc15-c544369cec53-->
            <ws:partial template="{{_options.emptyTemplate}}" items="{{_items}}" filter="{{_options.filter}}"/>
        </div>
    </ws:if>
</ws:template>
<ws:template name="withDragNDrop">
    <Controls.dragnDrop:Container
        on:dragStart="_dragStart()"
        on:dragEnd="_dragEnd()"
        on:dragLeave="_dragLeave()"
        on:dragEnter="_dragEnter()"
        on:documentDragEnd="_documentDragEnd()"
        draggingTemplate="{{_options.draggingTemplate}}"
        name="dragNDropContainer"
    >
        <ws:content>
            <ws:partial template="{{viewContent}}" />
        </ws:content>
    </Controls.dragnDrop:Container>
</ws:template>
<ws:template name="viewTpl">
    <Controls._list.ScrollContainer
            name="scrollController"
            on:scrollPositionChanged="scrollMoveSyncHandler()"
            on:scrollMove="scrollMoveHandler()"
            on:loadMore="loadMore()"
            on:viewResize="_viewResize()"
            on:viewportResize="viewportResizeHandler()"
            on:canScroll="canScrollHandler()"
            on:cantScroll="cantScrollHandler()"
            on:scrollResize="scrollResizeHandler()"
            on:updateShadowMode="updateShadowModeHandler()"
            on:triggerVisibilityChanged="triggerVisibilityChangedHandler()"
            on:triggerOffsetChanged="triggerOffsetChangedHandler()"
            on:activeElementChanged="_notifyHandler('activeElementChanged')"
            on:changeIndicatorState="changeIndicatorStateHandler()"
            collection="{{_listViewModel}}"
            needScrollCalculation="{{_needScrollCalculation}}"
            scope="{{_options}}">
        <Controls._list.EditInPlace
                name="editInPlace"
                editingConfig="{{_options.editingConfig}}"
                on:beforeBeginEdit="_notifyHandler('beforeBeginEdit')"
                on:afterBeginEdit="_onAfterBeginEdit()"
                on:beforeEndEdit="_notifyHandler('beforeEndEdit')"
                on:afterEndEdit="_onAfterEndEdit()"
                listModel="{{_listViewModel}}"
                multiSelectVisibility="{{_options.multiSelectVisibility}}"
                errorController="{{ __errorController }}"
                source="{{_sourceController}}"
                useNewModel="{{ _options.useNewModel }}">
            <ws:partial
                    attr:class="{{_itemActionsMenuId !== null ? 'controls-itemActionsV_invisible'}}"
                    name="{{name}}"
                    template="{{ _options.content }}"
                    scope="{{_options}}"
                    loadingState="{{_showLoadingIndicatorImage ? _loadingIndicatorState}}"
                    dragNDropControl="{{_children.dragNDropContainer}}"
                    _needBottomPadding="{{_needBottomPadding}}"
                    listModel="{{_listViewModel}}"
                    startDragNDropCallback="{{ _options.itemsDragNDrop ? _startDragNDropCallback }}"
                    on:markedKeyChanged="_notifyHandler('markedKeyChanged')"
                    on:itemClick="_onItemClick()"
                    on:groupClick="_onGroupClick()"
                    on:editArrowClick="_notifyHandler('editArrowClick')"
                    on:itemContextMenu="_onItemContextMenu()"
                    on:itemMouseDown="_itemMouseDown()"
                    on:itemMouseUp="_itemMouseUp()"
                    on:itemMouseEnter="_itemMouseEnter()"
                    on:itemMouseMove="_itemMouseMove()"
                    on:itemMouseLeave="_itemMouseLeave()"
                    on:hoveredItemChanged="_notifyHandler('hoveredItemChanged')"
                    on:hoveredCellChanged="_notifyHandler('hoveredCellChanged')"
                    on:itemSwipe="_onItemSwipe()"
                    on:dragStart="_notifyHandler('dragStart')">
                <ws:itemActionsTemplate>
                    <ws:partial
                            template="{{_itemActionsTemplate}}"
                            scope="{{ _listViewModel.getActionsTemplateConfig() }}"
                            itemActionsClass="{{ itemActionsTemplate.itemActionsClass }}"
                            itemData="{{ itemActionsTemplate.currentItem }}" />
                </ws:itemActionsTemplate>
                <ws:swipeTemplate>
                    <ws:partial
                            template="{{ _swipeTemplate }}"
                            scope="{{ _listViewModel.getActionsTemplateConfig() }}"
                            swipeConfig="{{ _listViewModel.getSwipeConfig() }}"
                            animationState="{{ _listViewModel.getSwipeAnimation() }}"
                            itemData="{{ swipeTemplate.currentItem }}" />
                </ws:swipeTemplate>
               <ws:tagTemplate>
                  <ws:partial template="wml!Controls/Application/TagTemplate/TagTemplate"
                              on:click="_onTagClickHandler(tagTemplate.dispItem, tagTemplate.columnIndex)"
                              on:mouseenter="_onTagHoverHandler(tagTemplate.dispItem, tagTemplate.columnIndex)"/>
               </ws:tagTemplate>
                <ws:viewTemplate>
                    <ws:partial template="{{_options.viewName}}"/>
                </ws:viewTemplate>
                <ws:footerTemplate>
                    <ws:partial template="footerTemplateIf"/>
                </ws:footerTemplate>
                <ws:multiSelectTpl>
                    <ws:partial template="multiSelectTplIf"/>
                </ws:multiSelectTpl>
                <ws:emptyTemplate>
                    <ws:partial template="emptyTemplateIf"/>
                </ws:emptyTemplate>
            </ws:partial>
        </Controls._list.EditInPlace>
    </Controls._list.ScrollContainer>
</ws:template>
<ws:template name="fullView">
    <ws:if data="{{_options.itemsDragNDrop}}">
        <ws:partial template="withDragNDrop">
            <ws:viewContent>
                <ws:partial template="viewTpl"  name="{{name}}"/>
            </ws:viewContent>
        </ws:partial>
    </ws:if>
    <ws:else>
        <ws:partial template="viewTpl" name="{{name}}"/>
    </ws:else>
</ws:template>

<Controls.dataSource:error.Container
    name="errorContainer"
    viewConfig="{{ __error }}"
    on:keyDown="_onViewKeyDown()"
>
    <div class="controls-BaseControl" on:sortingChanged="_sortingChanged()" on:mouseenter="_initItemActions()" on:touchstart="_initItemActions()">
        <div name="fakeFocusElem" tabindex="0" class="controls-BaseControl__fakeFocusElem"></div>

        <ws:if data="{{_listViewModel}}">

            <ws:if data="{{_loadingIndicatorState=== 'up'}}">
                <ws:partial template="loadingIndicator"/>
            </ws:if>

            <ws:partial template="loadingIndicator" _showLoadingIndicatorImage="{{true}}" indicatorName="up" loadingIndicatorState="up" attr:style="display: none;"/>

            <ws:partial template="fullView" name="listView" attr:class="{{(_showActions || _options.useNewModel) ? 'controls-BaseControl_showActions'}}"/>

            <ws:partial template="loadingIndicator" _showLoadingIndicatorImage="{{true}}" indicatorName="down" loadingIndicatorState="down" attr:style="display: none;"/>
        </ws:if>

        <ws:if data="{{_loadingIndicatorState === 'down'}}">
            <ws:partial template="loadingIndicator"/>
        </ws:if>

        <ws:if data="{{_showContinueSearchButton}}">
            <ws:partial template="{{_options.continueSearchTemplate}}">
                <ws:contentTemplate>
                    <div class="controls-BaseControl__continueSearch_caption" on:click="_continueSearch()">
                        {[Продолжить поиск]}
                    </div>
                </ws:contentTemplate>
            </ws:partial>
        </ws:if>

        <ws:if data="{{_pagingVisible}}">
            <div class="controls-BaseControl_paging-Padding_theme-{{_options.theme}} {{_options.task1179362156 ? 'controls-BaseControl-hide-paging'}}">
            </div>
            <div class="controls-BaseControl__pagingContainer {{_options.task1179362156 ? 'controls-BaseControl-hide-paging'}}">
                <Controls.paging:Paging
                    attr:class="controls-BaseControl__scrollPaging_theme-{{_options.theme}}"
                    scope="{{_pagingCfg}}"
                    showEndButton="{{_options.navigation.viewConfig.showEndButton}}"
                    on:onArrowClick="__onPagingArrowClick()" />
            </div>
        </ws:if>
        <Controls.popup:Sticky
            name="menuOpener"
            template="Controls/menu:Popup"
            closeOnOutsideClick="{{true}}"
            actionOnScroll="close"
            on:result="_onItemActionsMenuResult()"
            on:close="_onItemActionsMenuClose()">
            <ws:fittingMode vertical="overflow"/>
        </Controls.popup:Sticky>
        <Controls.event:Listener
           event="dataError"
           on:dataError="_onDataError()"/>
    </div>
</Controls.dataSource:error.Container>
