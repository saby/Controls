<ws:template name="ITEM">

    <!-- Скрыта, если запись перетаскивается драг-н-дропом -->
    <!-- Подвалы перемещаемой записи не нужно скрывать, т.к. они могут рисоваться не для этой записи, а для родителя. -->
    <ws:if data="{{ isVisible !== false }}">

        <!-- Дублирование блока - необходимая жертва. -->
        <!-- Редактируемую строку необходимо обернуть в контрол EditingRow. Сделать это прямо в цикле нельзя, т.к. -->
        <!-- за один шаг цикла может отрисоваться несколько записей, например шапка группы и добавляемая запись. -->
        <!-- В таком случае контрол обернет сразу две записи, что неверно. -->
        <!-- Выход только один - дублирование. Обернуть можно непосредственно при вызове рендера -->
        <!-- записи (шаблона ITEM), но тогда таких мест получится 6, либо здесь, внутри ITEM. -->
        <ws:if data="{{ wrapEditingRow }}">
            <!-- Во время редактирования строки View не должна слушать событие click и mouseDown -->
            <Controls._list.EditInPlace.EditingRow
                    name="editingRow"
                    on:deactivated="_onRowDeactivated()">
                <ws:partial
                        template="{{ (itemData.item.get && itemData.item.get(itemData.itemTemplateProperty)) || itemTemplate }}"
                        itemData="{{ itemData }}"

                        itemActionsTemplate="{{ itemActionsTemplate }}"
                        itemActionsClass="{{ itemActionsClass }}"
                        swipeTemplate="{{ swipeTemplate }}"
                        editArrowTemplate="{{ editArrowTemplate }}"
                        multiSelectTpl="{{ multiSelectTpl }}"
                        multiSelectVisibility="{{ listModel.getMultiSelectVisibility() }}"
                        backgroundStyle="{{ backgroundStyle }}"
                        tagTemplate="{{ tagTemplate }}"
                        markerPosition="{{_options.markerPosition}}"
                        on:editingItemClick="_onEditingItemClick(itemData.dispItem)"

                        on:contextmenu="_onItemContextMenu(itemData)"
                        on:swipe="_onItemSwipe(itemData)"
                        on:longtap="_onItemLongTap(itemData)"
                        on:mouseup="_onItemMouseUp(itemData)"
                        on:mouseenter="_onItemMouseEnter(itemData)"
                        on:mouseleave="_onItemMouseLeave(itemData)"
                        on:mousemove="_onItemMouseMove(itemData)"
                        on:wheel="_onItemWheel(itemData)"/>
            </Controls._list.EditInPlace.EditingRow>
        </ws:if>
        <ws:else>
            <ws:partial
                    template="{{ (itemData.item.get && itemData.item.get(itemData.itemTemplateProperty)) || itemTemplate }}"
                    itemData="{{ itemData }}"

                    itemActionsTemplate="{{ itemActionsTemplate }}"
                    itemActionsClass="{{ itemActionsClass }}"
                    swipeTemplate="{{ swipeTemplate }}"
                    editArrowTemplate="{{ editArrowTemplate }}"
                    multiSelectTpl="{{ multiSelectTpl }}"
                    multiSelectVisibility="{{ listModel.getMultiSelectVisibility() }}"
                    backgroundStyle="{{ backgroundStyle }}"
                    tagTemplate="{{ tagTemplate }}"
                    markerPosition="{{_options.markerPosition}}"

                    on:click="_onItemClick(itemData.dispItem)"
                    on:contextmenu="_onItemContextMenu(itemData)"
                    on:swipe="_onItemSwipe(itemData)"
                    on:longtap="_onItemLongTap(itemData)"
                    on:mousedown="_onItemMouseDown(itemData)"
                    on:mouseup="_onItemMouseUp(itemData)"
                    on:mouseenter="_onItemMouseEnter(itemData)"
                    on:mouseleave="_onItemMouseLeave(itemData)"
                    on:mousemove="_onItemMouseMove(itemData)"
                    on:wheel="_onItemWheel(itemData)"/>
        </ws:else>
    </ws:if>

    <!-- Подвалы узлов для дерева. Живем так до перехода на новую модель или до ws:fragment. -->
    <!-- В записи подвал не вывести, т.к. редатируемая строка оборачивается в контрол. Контрол может принять только один корневой элемент. -->
    <ws:if data="{{ nodeFooters && nodeFooters.length > 0 }}">
        <ws:partial template="{{ itemData.nodeFooterBaseTemplate }}"
                    useNewNodeFooters="{{ itemData.useNewNodeFooters }}"
                    nodeFooters="{{ nodeFooters }}"
                    moreFontColorStyle="{{ itemData.moreFontColorStyle }}"/>
    </ws:if>
</ws:template>


<ws:for data="listModel.reset(); listModel.isEnd(); listModel.goToNext();">

    <ws:partial if="{{ listModel.getCurrent().beforeItemTemplate }}"
                template="{{ listModel.getCurrent().beforeItemTemplate }}"
                scope="{{ listModel.getCurrent().beforeItemTemplateOptions }}"
                itemTemplate="{{ itemTemplate }}"
                listModel="{{ listModel }}"
                __notExcessiveRender="{{ true }}" />


    <!-- Группа -->
    <ws:if data="{{ listModel.getCurrent().isGroup }}">
        <!-- Шаблон элемента -->
        <ws:partial template="{{groupTemplate}}"
                    itemData="{{listModel.getCurrent()}}"
                    attr:key="{{listModel.getCurrent().key}}"
                    backgroundStyle="{{backgroundStyle}}"
                    on:click="_onGroupClick(listModel.getCurrent().dispItem)"
                    __notExcessiveRender="{{ true }}" />
    </ws:if>
    <ws:else> <!-- Запись -->
        <ws:if data="{{listModel.isShouldBeDrawnItem(listModel.getCurrent())}}">

            <!-- Перетаскивается запись в позицию перед текущей -->
            <ws:partial if="{{ listModel.getCurrent().dragTargetPosition === 'before' }}"
                        template="ITEM"
                        attr:key="{{ listModel.getCurrent().draggingItemData.key }}__dragged"
                        itemData="{{ listModel.getCurrent().draggingItemData }}"/>

            <!-- [ЗАПИСЬ] Текущая запись -->
            <ws:partial template="ITEM"
                        isVisible="{{ listModel.getCurrent().isVisible }}"
                        wrapEditingRow="{{ listModel.getCurrent().isEditing() }}"
                        itemData="{{ listModel.getCurrent() }}"
                        nodeFooters="{{ listModel.getCurrent().nodeFooters }}"
                        attr:key="{{ listModel.getCurrent().key }}"/>

            <!-- Перетаскивается запись в позицию после текущей -->
            <ws:partial if="{{ listModel.getCurrent().dragTargetPosition === 'after' }}"
                        template="ITEM"
                        itemData="{{ listModel.getCurrent().draggingItemData }}"
                        attr:key="{{ listModel.getCurrent().draggingItemData.key }}__dragged"/>
        </ws:if>
    </ws:else>


    <ws:partial if="{{ listModel.getCurrent().afterItemTemplate }}"
                template="{{ listModel.getCurrent().afterItemTemplate }}"
                scope="{{ listModel.getCurrent().afterItemTemplateOptions }}"
                itemTemplate="{{ itemTemplate }}"
                listModel="{{ listModel }}"
                __notExcessiveRender="{{ true }}" />
</ws:for>
