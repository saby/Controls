<ws:template name="itemActionsTemplateChooser">
   <ws:if data="{{itemData.isSwiped()}}">
      <ws:partial template="{{swipeTemplate}}"
                  itemData="{{itemData}}"
                  itemActionsTemplate="{{itemActionsTemplate}}"
                  itemActionsContainerStyles="{{itemActionsContainerStyles}}"
                  attr:class="controls-Grid__itemAction js-controls-ColumnScroll__notDraggable"
                  highlightOnHover="{{highlightOnHover}}"
                  theme="{{itemData.theme}}"/>
   </ws:if>
   <ws:else data="{{itemData.itemActionsPosition !== 'custom'}}">
      <ws:partial template="{{itemActionsTemplate}}"
                  itemActionsClass="{{itemActionsClass}}"
                  itemData="{{itemData}}"
                  itemActionsContainerStyles="{{itemActionsContainerStyles}}"
                  attr:class="controls-Grid__itemAction js-controls-ColumnScroll__notDraggable"
                  highlightOnHover="{{highlightOnHover}}"
                  theme="{{itemData.theme}}"/>
   </ws:else>
</ws:template>

<ws:template name="multiSelectTemplate">
   <ws:partial template="{{multiSelectTpl}}" _preventMergeOptions="{{ preventMergeOptions }}">
      <ws:templateOptions triState="{{itemData.item[itemData.nodeProperty] !== null}}"
                          checkboxReadOnly="{{itemData.isAdd || checkboxReadOnly}}"
                          item="{{ itemData.dispItem }}"
                          itemData="{{itemData}}"/>
   </ws:partial>
</ws:template>

<ws:template name="COLUMN_COLSPAN_CONTENT">
    <div class="controls-Grid__row-cell__content_colspaned
         {{currentColumn.getColspanedPaddingClassList(currentColumn, colspan).top}}
         {{currentColumn.getColspanedPaddingClassList(currentColumn, colspan).bottom}}
         {{currentColumn.getColspanedPaddingClassList(currentColumn, colspan).right}}
         {{!isLadderHeader && currentColumn.hiddenForLadder && !colspan ? 'controls-Grid__row-cell__content_hiddenForLadder controls-background-' + itemData.backgroundStyle + ' controls-Grid__row-cell__content_hiddenForLadder'}}
         {{!isLadderHeader && itemData.stickyLadder ? 'controls-Grid__row-cell__content_ladderHeader'}}">
        <ws:partial template="{{colspanTemplate}}" itemData="{{itemData}}">
           <ws:expanderTemplate>
              <div class="{{expanderTemplate.itemData.getExpanderClasses(expanderTemplate.expanderIcon, expanderTemplate.expanderSize)}}"></div>
           </ws:expanderTemplate>
           <ws:multiSelectTemplate>
              <ws:partial template="multiSelectTemplate" preventMergeOptions="{{ true }}" if="{{ itemData.multiSelectPosition === 'custom' }}"/>
           </ws:multiSelectTemplate>
        </ws:partial>
    </div>
</ws:template>

<ws:template name="COLUMN_CONTENT">
    <!-- При горизонтальном скролле хлебные крошки выводятся без колспанов (крошка в первой ячейке, остальные пустые, разделитель колонок скрыт). -->
    <!-- Этот механизм вызывает шаблон колонок, как при обычном рендере. -->
    <!-- Не нужно рендерить контент ячейки, если это не ячейка с colspanTemplate-->
   <ws:partial template="{{ renderSeparatedColumnContent !== false ? currentColumn.template : 'Controls/gridOld:ColumnTemplate' }}"
                scope="{{currentColumn.column.templateOptions}}"
                editArrowTemplate="{{editArrowTemplate}}"
                itemActionsClass="{{itemActionsClass}}"
                itemActionsTemplate="{{itemActionsTemplate}}"
                attr:class="{{currentColumn.column.align ? ' controls-Grid__row-cell__content_halign_' + currentColumn.column.align : ''}}
                            {{currentColumn.column.valign ?' controls-Grid__cell_valign_' + currentColumn.column.valign + ' controls-Grid__cell-content_full-height' : ''}}
                            {{itemData.isAnimatedForSelection() ? ' controls-ListView__item_rightSwipeAnimation'}}
                            {{!isLadderHeader && currentColumn.hiddenForLadder && !colspan ? 'controls-Grid__row-cell__content_hiddenForLadder controls-background-' + itemData.backgroundStyle + ' controls-Grid__row-cell__content_hiddenForLadder'}}
                            {{!isLadderHeader && itemData.stickyLadder ? 'controls-Grid__row-cell__content_ladderHeader'}}
                            {{!!itemData.isDragging ? ' controls-ListView__itemContent_dragging'}}"
                ladderWrapper="{{currentColumn.ladderWrapper}}"
                itemData="{{currentColumn}}"
                tagTemplate="{{tagTemplate}}">
      <ws:expanderTemplate>
         <div class="{{expanderTemplate.itemData.getExpanderClasses(expanderTemplate.expanderIcon, expanderTemplate.expanderSize)}}"></div>
      </ws:expanderTemplate>
      <ws:afterItemTemplate>
            <div if="{{!isSearchSeparator && itemData.isDrawExpander(currentColumn.columnIndex, expanderIcon, 'right')}}"
                 class="{{itemData.getExpanderClasses(itemData.getExpanderIcon(expanderIcon), itemData.getExpanderSize(expanderSize))}}"></div>
      </ws:afterItemTemplate>
       <ws:multiSelectTemplate>
          <ws:partial template="multiSelectTemplate" preventMergeOptions="{{ true }}" if="{{ itemData.multiSelectPosition === 'custom' }}"/>
       </ws:multiSelectTemplate>
    </ws:partial>
</ws:template>

<ws:template name="COLUMN_CONTENT_WRAPPER">

   <!-- Маркер, не смотрим на него, если выводим фейковую стики ячейку для лесенки -->
   <ws:if data="{{ !isLadderHeader }}">
      <div if="{{marker !== false && itemData.shouldDisplayMarker(currentColumn.columnIndex)}}"
           class="{{itemData.getMarkerClasses(markerClassName)}}"></div>

      <div if="{{!!itemData.dragTargetNode}}"
           class="controls-TreeGridView__dragTargetNode
           {{currentColumn.columnIndex === 0 ? 'controls-TreeGridView__dragTargetNode_first'}}
           {{currentColumn.columnIndex === itemData.getLastColumnIndex() ? 'controls-TreeGridView__dragTargetNode_last'}}"></div>
   </ws:if>

   <!-- Колонка с чекбоксами -->
   <ws:if data="{{itemData.hasMultiSelectColumn && currentColumn.columnIndex === 0}}">
      <ws:if data="{{!itemData.isAdd && !isSearchSeparator}}">
         <ws:partial template="multiSelectTemplate"/>
      </ws:if>
      <ws:else>
         <div class="{{'controls-Grid__cell_spacingFirstCol_' + itemData.itemPadding.left + ' controls-TreeGrid__nodeFooterContent_spacingLeft-' + itemData.itemPadding.left}}"></div>
      </ws:else>
   </ws:if>
   <!-- Данные колонки -->
   <ws:else>

      <ws:if data="{{itemData.hasMultiSelectColumn && currentColumn.columnIndex === 1 || !itemData.hasMultiSelectColumn && currentColumn.columnIndex === 0}}">
         <ws:if data="{{!withoutLevelPadding && itemData.level > 1}}">
            <ws:for data="i in itemData.level - 1">
               <div class="controls-TreeGrid__row-levelPadding {{itemData.getLevelIndentClasses(itemData, expanderSize, levelIndentSize)}}"></div>
            </ws:for>
         </ws:if>
         <ws:if data="{{!isSearchSeparator && itemData.isDrawExpander(currentColumn.columnIndex, expanderIcon, 'default')}}">
            <div class="{{itemData.getExpanderClasses(itemData.getExpanderIcon(expanderIcon), itemData.getExpanderSize(expanderSize))}}"></div>
         </ws:if>
         <ws:else data="{{itemData.shouldDrawExpanderPadding(itemData, expanderIcon, expanderSize)}}">
            <div class="{{itemData.getExpanderPaddingClasses(itemData, expanderSize)}} js-controls-ListView__notEditable"></div>
         </ws:else>
      </ws:if>


      <ws:if data="{{ itemData.getColspanType(_options) === 'none' }}">
         <ws:partial template="COLUMN_CONTENT" isLadderHeader="{{ isLadderHeader }}"/>
      </ws:if>
      <ws:else data="{{ itemData.getColspanType(_options) === 'full' }}">
         <ws:partial template="COLUMN_COLSPAN_CONTENT" isLadderHeader="{{ isLadderHeader }}"/>
      </ws:else>
      <ws:else>
         <ws:if data="{{ currentColumn.columnIndex === (itemData.hasMultiSelectColumn ? 1 : 0) }}">
            <!-- Растянутая колонка -->
            <ws:partial template="COLUMN_COLSPAN_CONTENT" isLadderHeader="{{ isLadderHeader }}"/>
         </ws:if>
         <ws:else data="{{ currentColumn.columnIndex >= (colspanLength + (itemData.hasMultiSelectColumn ? 1 : 0)) }}">
            <!-- Оставшиеся колонки -->
            <ws:partial template="COLUMN_CONTENT" isLadderHeader="{{ isLadderHeader }}"/>
         </ws:else>
      </ws:else>


      <ws:if data="{{!itemData.columnScroll && itemData.isDrawActions(itemData, currentColumn, colspan || colspanCurrentNode)}}">
         <ws:partial template="itemActionsTemplateChooser"/>
      </ws:if>

      <ws:if data="{{ itemData.shouldDisplayDraggingCounter() }}">
         <span class="controls-ListView__item-dragging-counter">{{(item || itemData).getDraggedItemsCount()}}</span>
      </ws:if>

   </ws:else>
</ws:template>

<ws:template name="STICKY_LADDER_HEADER_CONTENT">
   <Controls.scroll:StickyBlock position="{{ {'vertical' : 'topBottom'} }}" backgroundStyle="{{'transparent'}}"
                                 shadowVisibility="hidden"
                                 mode="replaceable">
      <ws:partial template="COLUMN_CONTENT_WRAPPER"
                  currentColumn="{{currentColumn}}"
                  isLadderHeader="{{ true }}"
                  ladderWrapperClass="controls-Grid__cell-content-wrapper_ladder"
                  stickyProperty="{{stickyProperty}}"
                  attr:class="{{itemData.getClassesLadderHeading(currentColumn, itemData.theme)}}"/>
   </Controls.scroll:StickyBlock>
</ws:template>

<ws:template name="STICKY_LADDER_HEADER">
   <ws:if data="{{itemData.stickyLadder[stickyProperty].headingStyle && currentColumn.hiddenForLadder}}">
      <div attr:class="controls-Grid__row-ladder-cell
                       {{!!itemData.isActive() ? ' controls-GridView__item_active' }}
                       {{!!itemData.isDragging ? ' controls-ListView__item_dragging' }}
                       {{!!itemData.columnScroll ? currentColumn.classList.columnScroll}}"
           attr:key="{{itemData.key + stickyProperty + '_sticky_ladder'}}"
           attr:style="{{itemData.stickyLadder[stickyProperty].headingStyle}}">

         <ws:if data="{{itemData.stickyProperties[index]}}">
            <ws:if data="{{index === 1}}">
               <div class="controls-Grid__row-additional_ladderWrapper"
                  style="{{ 'right: 0; left: -' + currentColumn.column.width }};">
                  <ws:partial template="STICKY_LADDER_HEADER_CONTENT" attr:class="{{itemData.getAdditionalLadderClasses()}}" attr:style="z-index: 1" currentColumn="{{currentColumn}}" stickyProperty="{{stickyProperty}}"/>
               </div>
            </ws:if>
            <ws:else>
               <div class="controls-Grid__row-main_ladderWrapper"
                  style="{{ 'left: 0; right: -' + currentColumn.column.width }};">
                  <ws:partial template="STICKY_LADDER_HEADER_CONTENT" attr:style="z-index: {{currentColumn.columnScrollVisibility ? 4 : 2}}" currentColumn="{{currentColumn}}" stickyProperty="{{stickyProperty}}"/>
               </div>
            </ws:else>
         </ws:if>
      </div>
   </ws:if>
</ws:template>


<ws:template name="COLUMN">
   <!-- Первая строка лесенки -->
   <ws:partial template="STICKY_LADDER_HEADER" if="{{ itemData.stickyProperties[0] }}" currentColumn="{{currentColumn}}" index="{{ 0 }}" stickyProperty="{{ itemData.stickyProperties[0] }}"/>

   <!-- Операции над записью в таблице без горизонтального скролла-->
   <ws:if data="{{itemData.columnScroll && itemData.isDrawActions(itemData, currentColumn, colspan || colspanCurrentNode) && itemData.itemActionsDrawPosition === 'before' }}">
      <ws:partial template="itemActionsTemplateChooser" itemActionsContainerStyles="{{currentColumn.gridCellStyles}}" attr:key="{{itemData.key}}_{{itemData.getCurrentColumnKey()}}_actions"/>
   </ws:if>


   <!-- Первая ячейка может быть заколспанена на N колонок. Выводим Первую, следующие N-1 колонок не выводим. -->
   <ws:if data="{{
      (colspan === false && !!colspanLength) ? ( (currentColumn.columnIndex <= (itemData.hasMultiSelectColumn ? 1 : 0)) || (currentColumn.columnIndex >= ((itemData.hasMultiSelectColumn ? 1 : 0) + colspanLength))) : true
   }}">
      <div class="{{currentColumn.classList.base}} {{currentColumn.classList.columnScroll}} {{ cellClassName || '' }}
                       {{ currentColumn.columnIndex === 0 && !itemData.hasMultiSelectColumn ? currentColumn.classList.padding.left }}
                       {{itemData.hasMultiSelectColumn && currentColumn.columnIndex === 0 ? currentColumn.classList.padding.getAll()}}
                       {{!!itemData.isActive() && highlightOnHover !== false ? ' controls-GridView__item_active' }}
                       {{ marker !== false ? currentColumn.classList.marked }}
                       {{!!itemData.isDragging ? ' controls-ListView__item_dragging' }}
                       {{!!itemData.dragTargetNode ? ' js-controls-TreeView__dragTargetNode'}}
                       controls-TreeGrid__row"
           style="{{currentColumn.gridCellStyles + itemData.getCellStyle(itemData, currentColumn, colspan || colspanCurrentNode) }}
                  {{ (colspan === false && !!colspanLength) && (currentColumn.columnIndex === (itemData.hasMultiSelectColumn ? 1 : 0)) ? itemData.getPartialColspanStyles(itemData.hasMultiSelectColumn ? 1 : 0, colspanLength) }}">
      <ws:partial template="COLUMN_CONTENT_WRAPPER"/>
   </div>
   </ws:if>

   <!-- Вторая строка лесенки -->
   <ws:partial template="STICKY_LADDER_HEADER" if="{{ itemData.stickyProperties[1] }}" currentColumn="{{currentColumn}}" index="{{ 1 }}" stickyProperty="{{ itemData.stickyProperties[1] }}"/>

   <!-- Операции над записью в таблице с горизонтальным скроллом, в отдельной ячейке -->
   <ws:if data="{{itemData.columnScroll && itemData.itemActionsDrawPosition === 'after' }}">
      <ws:if data="{{ itemData.isDrawActions(itemData, currentColumn, colspan || colspanCurrentNode) }}">
         <ws:partial template="itemActionsTemplateChooser" itemActionsContainerStyles="{{currentColumn.itemActionsGridCellStyles}}" attr:key="{{itemData.key}}_{{itemData.getCurrentColumnKey()}}_actions"/>
      </ws:if>
      <ws:else data="{{ itemData.shouldAddActionsCell && itemData.isActionsColumn(itemData, currentColumn, colspan || colspanCurrentNode) }}">
         <div attr:key="{{itemData.key}}_{{itemData.getCurrentColumnKey()}}_actionsStub"></div>
      </ws:else>
   </ws:if>
</ws:template>

<ws:template name="STICKY_COLUMN">
   <ws:if data="{{ itemData.columnScroll && itemData.itemActionsDrawPosition === 'before' }}">
      <ws:if data="{{ itemData.isDrawActions(itemData, currentColumn, colspan || colspanCurrentNode) }}">
         <ws:partial template="itemActionsTemplateChooser" itemActionsContainerStyles="{{currentColumn.gridCellStyles}}"/>
      </ws:if>
      <ws:else>
         <div></div>
      </ws:else>
   </ws:if>

   <!-- сюда попадаем только в случае застиканной записи в мастер или мастер классик, константа стиля находится в itemData.style -->
   <Controls.scroll:StickyBlock position="{{ {'vertical' : 'topBottom'} }}" backgroundStyle="{{itemData.style + '_sticked'}}"
                                 mode="{{stickyMode}}"
                                 shadowVisibility="lastVisible"
                                 attr:class="{{currentColumn.classList.base}} {{currentColumn.classList.columnScroll}}
                                   {{ marker !== false ? currentColumn.classList.marked }}
                                   {{ currentColumn.columnIndex === 0 && !itemData.hasMultiSelectColumn ? currentColumn.classList.padding.left }}
                                   {{itemData.hasMultiSelectColumn && currentColumn.columnIndex === 0 ? currentColumn.classList.padding.getAll()}}
                                   {{!!itemData.isDragging ? ' controls-ListView__item_dragging' }}
                                   {{!!itemData.dragTargetNode ? ' js-controls-TreeView__dragTargetNode'}}
                                   controls-TreeGrid__row"
                                 attr:style="{{currentColumn.gridCellStyles + itemData.getCellStyle(itemData, currentColumn, colspan || colspanCurrentNode)}}">
      <ws:partial template="COLUMN_CONTENT_WRAPPER"/>
   </Controls.scroll:StickyBlock>

   <ws:if data="{{ itemData.columnScroll && itemData.itemActionsDrawPosition === 'after' }}">
      <ws:if data="{{ itemData.isDrawActions(itemData, currentColumn, colspan || colspanCurrentNode) }}">
         <ws:partial template="itemActionsTemplateChooser" itemActionsContainerStyles="{{currentColumn.itemActionsGridCellStyles}}"/>
      </ws:if>
      <ws:else data="{{ itemData.isActionsColumn(itemData, currentColumn, colspan || colspanCurrentNode) }}">
         <div></div>
      </ws:else>
   </ws:if>
</ws:template>

<ws:if data="{{itemData.isStickedMasterItem}}">
   <Controls.scroll:Group>
      <div  attr:data-qa="{{itemData.getQAData(marker)}}"
            attr:class="{{ itemData.getRowClasses(_options) }}">
         <!-- The iterator does not restart when the model changes. Instead, the internal partial is redrawn. We do a reboot forcibly. -->
         <!-- Delete after the task is done https://online.sbis.ru/opendoc.html?guid=13786a2a-54c7-4a09-8fbc-11344cf0804d -->
         <ws:if data="{{colspanNodes && itemData.dispItem.isNode()}}">
            {{itemData.resetColumnIndex();}}
            <ws:if data="{{itemData.hasMultiSelectColumn}}">
               <ws:partial template="STICKY_COLUMN"
                           stickyMode="stackable"
                           currentColumn="{{itemData.getCurrentColumn(backgroundColorStyle)}}"
                           attr:class="{{className}}"/>
               {{itemData.goToNextColumn();}}
            </ws:if>
            <ws:partial template="STICKY_COLUMN"
                        stickyMode="stackable"
                        currentColumn="{{itemData.getCurrentColumn(backgroundColorStyle)}}"
                        colspanCurrentNode="{{true}}"
                        attr:class="{{className}}"/>
         </ws:if>
         <ws:else>
            <ws:for data="itemData.resetColumnIndex(); itemData.isLastColumn(itemData, colspan); itemData.goToNextColumn();">
               <ws:partial template="STICKY_COLUMN"
                           stickyMode="stackable"
                           attr:key="{{itemData.getCurrentColumnKey()}}"
                           currentColumn="{{itemData.getCurrentColumn(backgroundColorStyle)}}"
                           attr:class="{{className}}"/>
            </ws:for>
         </ws:else>
      </div>
   </Controls.scroll:Group>
</ws:if>
<ws:else>
   <div  attr:data-qa="{{itemData.getQAData(marker)}}"
         attr:class="{{ itemData.getRowClasses(_options) }}">
      <ws:if data="{{colspanNodes && itemData.dispItem.isNode()}}">
         {{itemData.resetColumnIndex();}}
         <ws:if data="{{itemData.hasMultiSelectColumn}}">
            <ws:partial template="COLUMN" attr:key="{{itemData.key}}_{{itemData.getCurrentColumnKey()}}" currentColumn="{{itemData.getCurrentColumn(backgroundColorStyle)}}" attr:class="{{className}}"/>
            {{itemData.goToNextColumn();}}
         </ws:if>
         <ws:partial template="COLUMN" attr:key="{{itemData.key}}_{{itemData.getCurrentColumnKey()}}" currentColumn="{{itemData.getCurrentColumn(backgroundColorStyle)}}" colspanCurrentNode="{{true}}" attr:class="{{className}}"/>
      </ws:if>
      <ws:else>
         <ws:for data="itemData.resetColumnIndex(); itemData.isLastColumn(itemData, colspan); itemData.goToNextColumn();">
            <ws:partial template="COLUMN" attr:key="{{itemData.key}}_{{itemData.getCurrentColumnKey()}}" currentColumn="{{itemData.getCurrentColumn(backgroundColorStyle)}}" attr:class="{{className}}"/>
         </ws:for>
      </ws:else>
   </div>
</ws:else>
