<Controls._dropdown._Controller
        name="controller"
        scope="{{_options}}"
        selectedKeys="{{[_options.selectedKey]}}"
        targetPoint="{{_targetPoint}}"
        width="{{_width}}"
        marker="{{false}}"
        popupClassName="{{_options.popupClassName ? _options.popupClassName + ' controls-ComboBox-popup' : 'controls-ComboBox-popup'}} controls-ComboBox-popup_theme-{{_options.theme}}"
        typeShadow="suggestionsContainer"
        close="{{_onClose}}"
        open="{{_onOpen}}"
        allowPin="{{false}}"
        selectedItemsChangedCallback="{{_setText}}"
        theme="{{_options.theme}}"
        _dropDownOpener="{{_children.content}}"
        on:selectedItemsChanged="_selectedItemsChangedHandler()"
        attr:class="controls-ComboBox {{_isOpen ? 'controls-ComboBox__opened'}}">
   <ws:itemPadding right="menu-xs" left="menu-xs"/>
   <ws:content>
      <Controls._dropdown.ComboBox.InputRender
              name="content"
              size="{{_options.size}}"
              style="{{_options.style}}"
              value="{{_value}}"
              tooltip="{{_options.tooltip}}"
              tagStyle="{{_options.tagStyle}}"
              autoComplete="{{_options.autoComplete}}"
              fontStyle="{{_options.fontStyle}}"
              textAlign="{{_options.textAlign}}"
              selectOnClick="{{_options.selectOnClick}}"
              fontSize="{{_options.fontSize}}"
              inlineHeight="{{_options.inlineHeight}}"
              fontColorStyle="{{_options.fontColorStyle}}"
              borderStyle="{{_options.borderStyle}}"
              on:tagClick="_notifyHandler('tagClick')"
              on:tagHover="_notifyHandler('tagHover')"
              placeholder="{{!_isEmptyItem ? _options.placeholder : _placeholder}}"
              attr:class="controls-ComboBox-InputRender {{_isOpen ? 'controls-Popup__isolatedFocusingContext'}}">
         <ws:afterFieldWrapper>
            <span if="{{!_options.readOnly}}" class="controls-ComboBox__arrow-wrapper controls-ComboBox__arrow-wrapper_theme-{{_options.theme}}">
               <span attr:class="controls-ComboBox__iconArrow controls-ComboBox__iconArrow_theme-{{_options.theme}} icon-{{_isOpen ? 'CollapseLight' : 'ExpandLight'}}"></span>
            </span>
         </ws:afterFieldWrapper>

      </Controls._dropdown.ComboBox.InputRender>
   </ws:content>
</Controls._dropdown._Controller>
