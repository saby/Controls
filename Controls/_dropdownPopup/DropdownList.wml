<div class="controls-DropdownList__popup controls-Popup__isolatedFocusingContext
            {{_dropdownClass}}
            {{_options.dropdownClassName}}
            theme_{{_options.theme}}"
            style="width: {{_options.width ? _options.width + 'px'}}"
     on:mouseleave="_mouseOutHandler()">
   <ws:if data="{{_options.showHeader || _options.headerTemplate}}">
      <ws:partial template="{{_options.headTemplate || _options.headerTemplate || _defaultHeadTemplate}}"
                  duplicateHeadClassName="{{_duplicateHeadClassName}}"
                  on:click="_headerClick()"
                  on:mouseenter="_closeSubMenu()"
                  scope="{{_headConfig}}"/>
   </ws:if>
   <Controls.scroll:Container attr:class="controls-ScrollContainer__flex controls-DropdownList__scroll theme_{{_options.theme}}"
                              topShadowVisibility="hidden"
                              bottomShadowVisibility="hidden">
      <div attr:ws-no-focus="true">
         <ws:partial template="wml!Controls/_dropdownPopup/For"
                     listModel="{{_listModel}}"
                     itemTemplate="{{_options.itemTemplate}}"
                     defaultItemTemplate="{{_defaultItemTemplate}}"
                     showClose="{{_options.showClose}}"
                     marker="{{_options.marker}}"
                     displayProperty="{{_options.displayProperty}}"
                     groupTemplate="{{_options.groupTemplate || _groupTemplate}}"
                     parentProperty="{{_options.parentProperty}}"
                     multiSelect="{{_options.multiSelect}}"
                     iconPadding="{{_iconPadding}}"
                     resultHandler="{{resultHandler}}" />
         <ws:if data="{{_hasAdditional}}">
            <div class="controls-DropdownList__additional theme_{{_options.theme}}" on:mouseenter="_closeSubMenu()">
               <Controls.Container.Async templateName="Controls/toggle:BigSeparator">
                  <ws:partial template="{{content.resolvedTemplate}}"
                              bind:value="_expanded"
                              on:valueChanged="_toggleExpanded()"
                              attr:class="controls-DropdownList__additional-button theme_{{_options.theme}}"/>
               </Controls.Container.Async>
            </div>
         </ws:if>
      </div>
   </Controls.scroll:Container>
   <ws:if data="{{_options.showClose && !_options.showHeader}}">
      <Controls.popupTemplate:CloseButton class="controls-DropdownList-cross controls-DropdownList-cross_theme_{{_options.theme}}" viewMode="link" on:click="_closeClick()"/>
   </ws:if>
   <ws:if data="{{_options.footerTemplate || _needShowApplyButton || (_options.hasMoreButton && _options.selectorTemplate)}}">
      <div class="controls-DropdownList__footer theme_{{_options.theme}}" on:mouseenter="_closeSubMenu()">
         <ws:if data="{{_options.footerTemplate}}">
            <ws:partial template="{{_options.footerTemplate}}" attr:class="controls-DropdownList__footer-content_theme_{{_options.theme}}"
                        itemData="{{_options.footerItemData}}" on:click="_footerClick()"/>
         </ws:if>
         <ws:if data="{{_options.hasMoreButton && _options.selectorTemplate || _needShowApplyButton}}">
            <div class="controls-DropdownList__footer-content_theme_{{_options.theme}} controls-DropdownList__footer-buttons_theme_{{_options.theme}}">
               <ws:if data="{{_options.hasMoreButton && _options.selectorTemplate}}">
                  <Controls._dropdownPopup.MoreButton attr:class="controls-DropdownList__hasMoreButton
                                                      controls-DropdownList{{_options.multiSelect ? '_multiSelect'}}__hasMoreButton_theme_{{_options.theme}}"
                                                      caption="{{_options.moreButtonCaption}}"
                                                      items="{{_options.selectorItems || _options.items}}"
                                                      selectedKeys="{{_listModel.getSelectedKeys()}}"
                                                      multiSelect="{{_options.multiSelect}}"
                                                      selectorTemplate="{{_options.selectorTemplate}}"
                                                      isCompoundTemplate="{{_options.isCompoundTemplate}}"
                                                      selectorOpener="{{_options.selectorOpener}}"
                                                      selectorDialogResult="{{_options.selectorDialogResult}}"
                                                      afterOpenCallback="{{_options.afterSelectorOpenCallback}}"/>
               </ws:if>
               <ws:if data="{{_needShowApplyButton}}">
                  <div class="controls-DropdownList__applyButton theme_{{_options.theme}}">
                     <Controls.buttons:Button viewMode="functionalButton"
                                              icon="icon-Yes"
                                              iconSize="m"
                                              iconStyle="contrast"
                                              buttonStyle="success"
                                              inlineHeight="l"
                                              on:click="_applySelection()"/>
                  </div>
               </ws:if>
            </div>
         </ws:if>
      </div>
   </ws:if>
   <Controls.popup:Sticky if="{{_hasHierarchy}}"
                          name="subDropdownOpener"
                          template="Controls/dropdownPopup:List"
                          closeOnOutsideClick="{{true}}"
                          actionOnScroll="close"
                          on:result="_subMenuResultHandler()"
                          on:close="_subDropdownClose()"
                          scope="{{_popupOptions}}" />
</div>
