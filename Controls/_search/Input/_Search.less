.controls-Render_search_borderRadius-default,
.controls-Render_searchContrast_borderRadius-default {
   border-radius: var(--border-radius_default_searchInput);
}

//добавляю пока только один размер для высоты l (используется на tensor.ru)
.controls-Render_search_borderRadius-l,
.controls-Render_searchContrast_borderRadius-l {
  border-radius: var(--border-radius_l_searchInput);
}

.controls-Render_state-search-valid,
.controls-Render_state-search-invalid,
.controls-Render_state-search-invalidAccent {
   border-color: var(--border-color_searchInput);
   background: var(--background-color_searchInput);
}

.controls-Render_state-search-valid-active,
.controls-Render_state-search-invalid-active,
.controls-Render_state-search-invalidAccent-active {
   border-color: var(--border-color_searchInput);
   background: var(--background-color_searchInput);
}

.controls-Search_state-search__input_border {
   border-color: var(--border-color_focus_searchInput);
   background: var(--background-color_searchInput);
}

.controls-Search_state-searchContrast__input_border {
   border-color: var(--border-color_contrast_focus_searchInput);
   background: var(--background-color_contrast_searchInput);
}

.controls-Render_state-search-valid_caretFilled,
.controls-Render_state-search-invalid_caretFilled,
.controls-Render_state-search-invalidAccent_caretFilled {

   &:focus-within {
      border-color: var(--border-color_focus_searchInput);
      background: var(--background-color_searchInput);
   }

}

.controls-Render_state-searchContrast-valid,
.controls-Render_state-searchContrast-invalid,
.controls-Render_state-searchContrast-invalidAccent {
   border-color: var(--border-color_contrast_searchInput);
   background: var(--background-color_contrast_searchInput);
}

.controls-Render_state-searchContrast-valid-active,
.controls-Render_state-searchContrast-invalid-active,
.controls-Render_state-searchContrast-invalidAccent-active {
   border-color: var(--border-color_contrast_focus_searchInput);
   background: var(--background-color_contrast_searchInput);
}

.ws-is-hover {
   .controls-Render_state-search-valid:hover,
   .controls-Render_state-search-invalid:hover,
   .controls-Render_state-search-invalidAccent:hover {
      border-color: var(--border-color_hover_searchInput);
   }

   .controls-Render_state-searchContrast-valid:hover,
   .controls-Render_state-searchContrast-invalid:hover,
   .controls-Render_state-searchContrast-invalidAccent:hover {
      border-color: var(--border-color_contrast_hover_searchInput);
   }
}

.controls-Render_state-search-readonly {
   border-color: var(--readonly_border-color_searchInput);
   background: var(--background-color_searchInput);
}

.controls-Render_state-searchContrast-readonly {
   border-color: var(--readonly_border-color_searchInput);
   background: var(--background-color_contrast_searchInput);
}

.controls-Search__field_margin-xs {
   margin: 0 var(--offset_2xs) 0 calc(var(--padding-left_searchInput) - var(--border-thickness));
}

.controls-Search__field_margin-null {
   margin: 0 var(--offset_2xs) 0 calc(var(--padding-left_searchInput) - var(--border-thickness));
}

.controls-Search__buttons {
   display: flex;
   align-self: center;
   align-items: center;
}

.controls-Search__button_enabled {
   cursor: pointer;
}

.controls-Search__button_readOnly {
   cursor: default;
}

.controls-Search__searchButton_inlineheight-s {
   .icon-size(var(--icon-size_s));
}

.controls-Search__searchButton_inlineheight-xs {
   .icon-size(var(--icon-size_s));
}

.controls-Search__searchButton_inlineheight-m,
.controls-Search__searchButton_inlineheight-default {
   .icon-size(var(--trigger_m_icon-size_searchInput));
}

.controls-Search__searchButton_inlineheight-l {
   .icon-size(var(--icon-size_l));
}

.controls-Search__searchButton_inlineheight-xl {
   .icon-size(var(--icon-size_l));
}

.controls-Search__searchButton_inlineheight-2xl {
   .icon-size(var(--icon-size_l));
}

.controls-Search__searchButton_color {
   color: var(--trigger_icon-color_searchInput);
}

.controls-Search__searchButton_color_readOnly {
   color: var(--readonly_trigger_icon-color_searchInput);
}

.controls-Search__resetButton {
   .icon-size(var(--reset-button_icon-size_searchInput));
}

.controls-Search__resetButton_color {
   color: var(--reset-button_icon-color_searchInput);
}

.controls-Search__searchButton_color:active {
   color: var(--trigger_icon-color_active_searchInput);
}

.controls-Search__resetButton_color:active {
   color: var(--reset-button_icon-color_searchInput);
}

.ws-is-hover {
   .controls-Search__searchButton_color:hover {
      color: var(--trigger_icon-color_hover_searchInput);
   }

   .controls-Search__resetButton_color:hover {
      color: var(--reset-button_icon-color_searchInput);
   }
}

.controls-Search__searchButton_position-left {
   margin-left: calc(var(--padding-left_searchInput) - var(--border-thickness));
}

.controls-Search__searchButton_position-right {
   margin-right: calc(var(--padding-right_searchInput) - var(--border-thickness));
}

.controls-Search__resetButton_position {
   margin-right: var(--trigger_offset_searchInput);
}

.controls-Search__nativeField_caretEmpty {
   caret-color: var(--caret-color_empty_searchInput);
}

.controls-Search__nativeField_caretFilled {
   caret-color: var(--text-color);
}

.controls-Search__expandable-search {
   height: var(--icon-size_m);
   width: var(--icon-size_m);
}

.controls-Search__expandable-container {
   height: var(--icon-size_m);
   overflow: hidden;
   position: relative;
}

.controls-Search__expandable-container-inlineWidth-m {
   width: var(--input_container_m-width-expandableSearch);
}

.controls-Search__expandable-container-inlineWidth-l {
   width: var(--input_container_l-width-expandableSearch);
}

.controls-Search__expandable-input {
   position: absolute;
   display: flex;
   flex-direction: row;
   left: 0;
}

.controls-Search__expandable-input-inlineWidth-m {
   animation: inputRightMoveSearch 0.3s;
}

.controls-Search__expandable-input-inlineWidth-l {
   animation: inputRightMoveWideSearch 0.3s;
}

.controls-Search__input-inlineWidth-l {
   width: var(--input_l-width-expandableSearch);
}

.controls-Search__input-inlineWidth-m {
   width: var(--input_m-width-expandableSearch);
}

.controls-Search__expandable-reset-button {
   color: var(--readonly_color);
   cursor: pointer;
   background: var(--close-button_icon-background-expandableSearch);
   &::after {
      content: '';
      position: absolute;
      top: 0;
      height: 100%;
      width: var(--close-button_shadow-width-expandableSearch);
      background: linear-gradient(to right, var(--close-button_shadow-start-color-expandableSearch), var(--close-button_shadow-end-color-expandableSearch));
   }
}

.controls-Search__expandable-reset-button:hover {
   color: var(--link_hover_text-color);
}

.controls-Search__expandable-reset-button:active {
   color: var(--reset-button_color_hover-expandableSearch);
}

.controls-Search__expandable-button-container {
   overflow: hidden;
   width: var(--icon-size_m);
}

.controls-Search__expandable-button-animation {
   animation: iconLeftMove 0.3s;
}

.controls-Search__expandable-input-base {
   display: inline-block;
}

@keyframes inputRightMoveWideSearch {
   0% {
      transform: calc(translateX(- var(--input_container_l-width-expandableSearch)));
   }

   100% {
      transform: translateX(0);
   }
}

@keyframes inputRightMoveSearch {
   0% {
      transform: calc(translateX(- var(--input_container_m-width-expandableSearch)));
   }

   100% {
      transform: translateX(0);
   }
}

@keyframes iconLeftMove {
   0% {
      transform: translateX(var(--icon-size_m));
   }

   100% {
      transform: translateX(0);
   }
}

//ios doesn't support dynamic color change of caret
//demo https://jsfiddle.net/gersasha/ew03jha4/2/
.ws-is-mobile-safari {
   .controls-Search__nativeField_caretEmpty {
      caret-color: var(--text-color);
   }
}
