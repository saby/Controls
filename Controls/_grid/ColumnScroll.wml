<div name="content" class="controls-ColumnScroll_content_wrapper {{_transformSelector}}" on:wheel="_wheelHandler()">
   <style name="contentStyle" data-vdom-ignore="true"></style>
   <ws:if data="{{_isDisplayColumnScroll()}}">
      <div name="startShadow" class="{{_calculateShadowClasses('start')}}" style="{{_calculateShadowStyles('start')}}"></div>
      <div class="{{_calculateShadowClasses('end')}}"></div>
   </ws:if>
   <ws:partial
           template="{{_options.content}}"
           scope="{{_options}}"

           position="{{_scrollPosition}}"
           contentSize="{{_contentSizeForHScroll}}"
           positionChangeHandler="{{_positionHandler}}"
           bind:scrollWidth="_scrollWidth"
           bind:containerSize="_contentContainerSize"
           isDisplayColumnScroll="{{_isDisplayColumnScroll()}}"
           trackVisible="{{ true }}"

           attr:class="controls-Grid_columnScroll"
           on:itemClick="_notifyHandler('itemClick')"
           on:itemMouseDown="_notifyHandler('itemMouseDown')"
           on:checkboxClick="_notifyHandler('checkboxClick')"
           on:itemSwipe="_notifyHandler('itemSwipe')"
           on:beforeBeginEdit="_notifyHandler('beforeBeginEdit')"
           on:afterBeginEdit="_notifyHandler('afterBeginEdit')"
           on:beforeEndEdit="_notifyHandler('beforeEndEdit')"
           on:afterEndEdit="_notifyHandler('afterEndEdit')"
           on:itemActionsClick="_notifyHandler('itemActionsClick')"
           on:actionClick="_notifyHandler('actionClick')"
           on:dragStart="_notifyHandler('dragStart')"
           on:dragEnd="_notifyHandler('dragEnd')"
           on:changeDragTarget="_notifyHandler('changeDragTarget')"
           on:dragEnter="_notifyHandler('dragEnter')"
           on:markedKeyChanged="_notifyHandler('markedKeyChanged')"
           on:selectedKeysChanged="_notifyHandler('selectedKeysChanged')"
           on:excludedKeysChanged="_notifyHandler('excludedKeysChanged')"
           on:sortingChanged="_notifyHandler('sortingChanged')"
           on:focusIn="_onFocusInEditingCell()"
   />
   <Controls.event:Listener event="controlResize" on:controlResize="_resizeHandler()"/>
</div>
