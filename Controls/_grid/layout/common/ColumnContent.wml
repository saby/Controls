<ws:template name="DEFAULT_CONTENT">
    <ws:if data="{{itemData.needSearchHighlight && !itemData.hasCellContentRender(itemData.column)}}">
        <Controls.decorator:Highlight highlightedValue="{{itemData.searchValue}}">
            <ws:value>
                <ws:String>{{itemData.item[itemData.column.displayProperty]}}</ws:String>
            </ws:value>
        </Controls.decorator:Highlight>
    </ws:if>
    <ws:else data="{{itemData.hasCellContentRender(itemData.column)}}">
        <Controls.Container.Async templateName="{{itemData.getCellContentRender(itemData.column)}}">
            <ws:partial template="{{content.resolvedTemplate}}"
                        scope="{{itemData.column}}"
                        searchValue="{{itemData.needSearchHighlight ? itemData.searchValue}}"
                        value="{{itemData.item[itemData.column.displayProperty]}}"/>
        </Controls.Container.Async>
    </ws:else>
    <ws:else>
        <ws:if data="{{hasWrapper}}">
            <div>{{itemData.item[itemData.column.displayProperty]}}</div>
        </ws:if>
        <ws:else>
            {{itemData.item[itemData.column.displayProperty]}}
        </ws:else>
    </ws:else>
</ws:template>

<ws:template name="DEFAULT_CONTENT_WRAPPER">
    <ws:if data="{{itemData.column.tooltipProperty}}">
        <Controls.Container.Async templateName="Controls/popup:InfoboxTarget">
            <ws:partial template="{{content.resolvedTemplate}}">
                <ws:content>
                    <ws:partial template="DEFAULT_CONTENT" hasWrapper="{{true}}"/>
                </ws:content>
                <ws:template>
                    <div>{{itemData.item[itemData.column.tooltipProperty]}}</div>
                </ws:template>
            </ws:partial>
        </Controls.Container.Async>
    </ws:if>
    <ws:else>
        <ws:partial template="DEFAULT_CONTENT"/>
    </ws:else>
</ws:template>

<div class="controls-Grid__row-cell__content controls-Grid__row-cell__content_baseline_default_theme-{{_options.theme}}
            {{ itemData.getEditingClassList(editable) }}
            {{itemData.classList.padding.getAll()}} {{ itemData.classList.columnContent }} controls-Grid__row-cell_cursor-{{cursor || 'pointer'}}
            {{(itemData.column.backgroundColorStyle || backgroundColorStyle) ? 'controls-Grid__row-cell__content_background_' + (itemData.column.backgroundColorStyle || backgroundColorStyle) + '_theme-' + _options.theme}}
            {{( !itemData.isSingleCellEditingMode && (itemData.column.hoverBackgroundStyle || itemData.hoverBackgroundStyle))  ? 'controls-Grid__item_background-hover_' + (itemData.column.hoverBackgroundStyle || itemData.hoverBackgroundStyle)  + '_theme-' + _options.theme}}
            js-controls-ListView__measurableContainer">
    <ws:if data="{{contentTemplate}}">
        <ws:partial
                template="{{contentTemplate}}"
                stickyProperty="{{stickyProperty}}"
                itemData="{{itemData}}"
                itemActionsTemplate="{{itemActionsTemplate}}"
                itemActionsClass="{{itemActionsClass}}"
                editArrowTemplate="{{editArrowTemplate}}"/>
    </ws:if>
    <ws:else>
        <ws:if data="{{itemData.column.textOverflow}}">
            <div class="controls-Grid__cell_{{itemData.column.textOverflow}} {{itemData.showEditArrow ? ('controls-Grid__editArrow-cellContent_theme-' + _options.theme + ' controls-Grid__editArrow-overflow-' + (itemData.column.textOverflow ? itemData.column.textOverflow + '_theme-' +_options.theme))}}" title="{{itemData.column.template || itemData.column.tooltipProperty ? '' : itemData.item[itemData.column.displayProperty] }}">
                <ws:partial template="DEFAULT_CONTENT_WRAPPER"/>
            </div>
        </ws:if>
        <ws:else>
            <ws:partial template="DEFAULT_CONTENT_WRAPPER" attr:class="{{itemData.showEditArrow ? 'controls-Grid__editArrow-cellContent_theme-' + _options.theme}}"></ws:partial>
        </ws:else>
        <ws:if data="{{itemData.showEditArrow && itemData.columnIndex === 0}}">
            <ws:partial template="{{editArrowTemplate}}" itemData="{{itemData}}"/>
        </ws:if>
    </ws:else>
    <ws:if data="{{tagTemplate !== undefined}}">
        <ws:if data="{{tagStyle}}">
            <div class="controls-Grid__cell_tag_theme-{{_options.theme}}">
                <ws:partial template="{{tagTemplate}}" tagStyle="{{tagStyle}}" dispItem="{{itemData.dispItem}}" columnIndex="{{itemData.columnIndex}}"/>
            </div>
        </ws:if>
        <ws:else>
            <ws:if data="{{itemData.column.tagStyleProperty && itemData.item.get(itemData.column.tagStyleProperty)}}">
                <div class="controls-Grid__cell_tag_theme-{{_options.theme}}">
                    <ws:partial template="{{tagTemplate}}" tagStyle="{{itemData.item.get(itemData.column.tagStyleProperty)}}" dispItem="{{itemData.dispItem}}" columnIndex="{{itemData.columnIndex}}"/>
                </div>
            </ws:if>
        </ws:else>
    </ws:if>
    <!-- По необходимости отображаем шаблон, который должен находиться после основного контента. -->
    <ws:partial if="{{ afterItemTemplate }}"
                template="{{ afterItemTemplate }}"/>
</div>
