<div class="controls_theme-{{_options.theme}} controls-FilterPanel__PropertyGrid">
   <ws:for data="index, item in _items">
      <ws:if data="{{_isItemVisible(item)}}">
         <ws:if data="{{(item[_options.itemTemplateProperty] || _options.itemTemplate.templateName).at}}">
            <Controls.Container.Async
               templateName="{{item[_options.itemTemplateProperty] || _options.itemTemplate.templateName}}">
               <div class="controls-FilterPanel__PropertyGrid__item
                           {{index === _lastVisibleIndex ? 'controls-FilterPanel__PropertyGrid__lastItem' : 'controls-FilterPanel__PropertyGrid__notLastItem'}}">
                  <ws:partial template="{{content.resolvedTemplate}}"
                              item="{{item}}"
                              templateOptions="{{_options.itemTemplate.templateOptions}}"
                              on:valueChanged="_valueChangedHandler(index)"
                              on:visibilityChanged="_visibilityChangedHandler(index)"
                              on:textValueChanged="_textValueChangedHandler(index)"
                              tabindex="{{_changedIndex === index ? '1' : '0'}}"
                              on:selectedKeysChanged="_valueChangedHandler(index)"
                              on:selectedKeyChanged="_valueChangedHandler(index)"
                              on:rangeChanged="_rangeChangedHandler(index)"/>
               </div>
            </Controls.Container.Async>
         </ws:if>
         <ws:else>
            <div class="controls-FilterPanel__PropertyGrid__item
                           {{index === _lastVisibleIndex ? 'controls-FilterPanel__PropertyGrid__lastItem' : 'controls-FilterPanel__PropertyGrid__notLastItem'}}">
               <ws:partial template="{{item[_options.itemTemplateProperty] || _options.itemTemplate.templateName}}"
                           item="{{item}}"
                           templateOptions="{{_options.itemTemplate.templateOptions}}"
                           on:valueChanged="_valueChangedHandler(index)"
                           on:visibilityChanged="_visibilityChangedHandler(index)"
                           on:textValueChanged="_textValueChangedHandler(index)"
                           tabindex="{{_changedIndex === index ? '1' : '0'}}"
                           on:selectedKeysChanged="_valueChangedHandler(index)"
                           on:selectedKeyChanged="_valueChangedHandler(index)"
                           on:rangeChanged="_rangeChangedHandler(index)"/>
            </div>
         </ws:else>
      </ws:if>
   </ws:for>
</div>
