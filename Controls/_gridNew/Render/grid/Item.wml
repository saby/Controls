<div attr:class="controls-Grid__row controls-ListView__itemV controls-ListView__itemV_cursor-pointer controls-Grid__row_highlightOnHover_default_theme-default controls-Grid__row_default_theme-default">
   <ws:for data="gridColumn in item.getColumns()">
      <div attr:class="{{ gridColumn.getWrapperClasses(theme, backgroundColorStyle, style) }}"
           attr:style="{{ gridColumn.getWrapperStyles() }}">
         <div if="{{ gridColumn.shouldDisplayMarker(marker, markerPosition) }}" attr:class="{{ gridColumn.getMarkerClasses(theme, style, markerPosition) }}"></div>
         <ws:if data="{{ gridColumn.isMultiSelectColumn() }}">
            <ws:partial template="{{ multiSelectTpl }}"
                        attr:class="{{ gridColumn.getContentClassesMultiSelectCell(theme) }}">
               <ws:templateOptions multiSelectStatus="{{ (item || itemData).isSelected() }}"
                                   key="{{ (item || itemData).getContents().getKey() }}"
                                   checkboxReadOnly="{{ checkboxReadOnly }}"/>
            </ws:partial>
         </ws:if>
         <ws:else>
            <div attr:class="{{ gridColumn.getContentClasses(theme, cursor, highlightOnHover) }}"
                 attr:style="{{ gridColumn.getContentStyles() }}">
               <ws:partial template="{{ gridColumn.getTemplate() }}"
                           attr:key="{{ gridColumn.getInstanceId() }}"
                           gridColumn="{{ gridColumn }}"
                           column="{{ gridColumn.getColumnConfig() }}"
                           item="{{ (item || itemData) }}"
                           theme="{{ theme }}"
                           cursor="{{ cursor }}"
                           templateHighlightOnHover="{{ templateHighlightOnHover }}"
                           itemData="{{ (item || itemData) }}">
                  <ws:ladderWrapper>
                     <ws:partial template="{{ladderWrapper.content}}"
                                 attr:class="{{ (item || itemData ).getLadderWrapperClasses(ladderWrapper.ladderProperty) }}"/>
                  </ws:ladderWrapper>
               </ws:partial>
            </div>
         </ws:else>
         <ws:if data="{{ gridColumn.shouldDisplayItemActions() }}">
            <ws:if data="{{ (item || itemData).isSwiped() && itemActionsPosition !== 'outside' }}">
               <ws:partial template="{{ swipeTemplate }}"
                           highlightOnHover="{{ highlightOnHover }}" />
            </ws:if>
            <ws:else data="{{ itemActionsPosition !== 'custom' }}">
               <ws:partial template="{{ itemActionsTemplate }}"
                           itemData="{{ item || itemData }}"
                           itemActionsClass="{{ itemActionsClass }}"
                           highlightOnHover="{{ highlightOnHover }}"/>
            </ws:else>
         </ws:if>
      </div>
   </ws:for>
</div>
