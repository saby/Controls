<tr attr:class="{{ item.getItemClasses({
        'highlightOnHover': highlightOnHover,
        'theme': theme,
        'style': style,
        'cursor': cursor,
        'clickable': clickable
    }) }}">
    <ws:for data="gridColumn in item.getColumns()">
        <td attr:class="{{ gridColumn.getWrapperClasses(theme, backgroundColorStyle, style, highlightOnHover) }}"
            attr:style="{{ gridColumn.getWrapperStyles() }}"
            attr:colspan="{{ gridColumn.getColspan() }}"
            attr:rowspan="{{ gridColumn.getRowspan() }}">
            <div class="{{ gridColumn.getRelativeCellWrapperClasses(theme) }}">
                <div if="{{ gridColumn.Markable && gridColumn.shouldDisplayMarker(marker, markerPosition) }}"
                     attr:class="{{ gridColumn.getMarkerClasses(theme, style, markerPosition) }}"></div>
                <ws:partial template="{{ gridColumn.getTemplate(multiSelectTpl) }}"
                            attr:key="{{ gridColumn.getInstanceId() }}"
                            gridColumn="{{ gridColumn }}"
                            column="{{ gridColumn.getColumnConfig() }}"
                            item="{{ (item || itemData) }}"
                            itemData="{{ (item || itemData) }}"
                            theme="{{ theme }}"
                            cursor="{{ cursor }}"
                            backgroundColorStyle="{{ backgroundColorStyle }}"
                            highlightOnHover="{{ highlightOnHover }}"
                            itemActionsTemplate="{{ itemActionsTemplate }}"
                            templateHighlightOnHover="{{ templateHighlightOnHover }}"
                            tagTemplate="{{ gridColumn.TagCell ? tagTemplate }}"
                            tagStyle="{{ gridColumn.TagCell ? tagStyle }}">
                    <ws:ladderWrapper>
                        <ws:partial template="{{ladderWrapper.content}}"
                                    attr:class="{{ (item || itemData).getLadderWrapperClasses(ladderWrapper.ladderProperty, ladderWrapper.stickyProperty) }}"/>
                    </ws:ladderWrapper>
                    <ws:templateOptions multiSelectStatus="{{ (item || itemData).isSelected() }}"
                                        key="{{ (item || itemData).key }}"
                                        checkboxReadOnly="{{ checkboxReadOnly }}"/>
                </ws:partial>
                <ws:if data="{{ gridColumn.ItemActionsCell && gridColumn.shouldDisplayItemActions() }}">
                    <ws:if data="{{ (item || itemData).isSwiped() && itemActionsPosition !== 'outside' }}">
                        <ws:partial template="{{ swipeTemplate }}"
                                    highlightOnHover="{{ highlightOnHover }}"/>
                    </ws:if>
                    <ws:else data="{{ itemActionsPosition !== 'custom' }}">
                        <ws:partial template="{{ itemActionsTemplate }}"
                                    itemData="{{ item || itemData }}"
                                    itemActionsClass="{{ itemActionsClass }}"
                                    highlightOnHover="{{ highlightOnHover }}"/>
                    </ws:else>
                </ws:if>
            </div>
        </td>
    </ws:for>
</tr>
