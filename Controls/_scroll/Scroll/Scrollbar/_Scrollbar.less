.controls-VScrollbar {
   cursor: pointer;
   display: inline-block;
   .box-sizing();
}

.controls-VScrollbar_vertical {
   width: @width_Scrollbar + 2 * @margin_Scrollbar;
   transition: width @animation-duration_Scrollbar ease-in-out;
}

.controls-VScrollbar_horizontal {
   height: @width_Scrollbar-horizontal;
   border-width: 0 @margin_Scrollbar;
}

.controls-VScrollbar_horizontal-track {
   display: flex;
   align-items: center;

   &::before {
      content: '';
      height: @height_Scrollbar_track;
      background-color: @background_Scrollbar_track;
      margin: 0 @offset_horizontal_Scrollbar_track;
      position: absolute;
      left: 0;
      right: 0;
   }
}

.controls-ColumnScroll_without_offset {
   transform-origin: 50% 0;
}

.controls-VScrollbar_horizontal_margin-top {
   margin-top: -(@width_Scrollbar-horizontal / 2); // TODO calculate middle correctly
}

.controls-VScrollbar__thumbWrapper {
   box-sizing: border-box;
   position: relative;
}

.controls-ColumnScroll_without_offset .controls-VScrollbar__thumbWrapper {
   padding: 0 @margin_Scrollbar;
   height: @width_Scrollbar;
}
.controls-VScrollbar__thumbWrapper_vertical {
   min-height: @min-height_Scrollbar-thumb;
}
.controls-VScrollbar__thumbWrapper_horizontal {
   min-width: @min-height_Scrollbar-thumb;
   height: 100%;
   padding: ((@width_Scrollbar-horizontal - @width_Scrollbar-horizontal-thumb) / 2) @offset_horizontal_Scrollbar_track;
   transition: padding @animation-duration_Scrollbar ease-in-out;
}

.controls-VScrollbar__thumb_vertical {
   border-radius: @border-radius_Scrollbar-thumb;
   left: @margin_Scrollbar;
   right: @margin_Scrollbar;
   top: @margin_Scrollbar;
   bottom: @margin_Scrollbar;
   position: absolute;
}

.controls-VScrollbar__thumb {
   background-color: @bg_Scrollbar-thumb_normal;
}

.controls-VScrollbar__thumb:hover,
.controls-VScrollbar__thumb_dragging_normal {
   background-color: @bg_Scrollbar-thumb_active_normal;
}

.controls-VScrollbar__thumb_horizontal {
   background-color: @bg_Scrollbar-horizontal_thumb_normal;
   border-radius: @border-radius_Scrollbar-horizontal-thumb;
   min-width: @min-height_Scrollbar-thumb;
   height: 100%;
}

.controls-VScrollbar__thumb_inverted {
   background-color: @bg_Scrollbar-thumb_inverted;
}

.controls-VScrollbar_vertical:hover,
.controls-VScrollbar_vertical_dragging {
   width: @width_Scrollbar_animation + 2 * @margin_Scrollbar;
}

.controls-VScrollbar:hover .controls-VScrollbar__thumb,
.controls-VScrollbar__thumb_dragging {
   border-radius: @border-radius_Scrollbar-thumb_animation;
}

.controls-VScrollbar__thumb_horizontal:hover {
   background-color: @bg_Scrollbar-horizontal_thumb_normal;
}

// при наведении или перемещении увеличиваем только thumb,
// что бы линия посередине не изменялась
// Изменил scale на height, т.к. при scale не корректно рассчитывается border-radius
.controls-VScrollbar_horizontal_dragging,
.controls-VScrollbar_horizontal:hover {
   .controls-VScrollbar__thumbWrapper_horizontal {
      padding: ((@width_Scrollbar-horizontal - (@width_Scrollbar-horizontal-thumb * @scale_Scrollbar-horizontal_thumb)) / 2) @offset_horizontal_Scrollbar_track;
   }

   .controls-VScrollbar__thumb_horizontal {
      border-radius: @border-radius_Scrollbar-horizontal-thumb_animation;
   }
}

.controls-VScrollbar__thumb_inverted:hover,
.controls-VScrollbar__thumb_dragging_inverted {
   background-color: @bg_Scrollbar-thumb_active_inverted;
}
