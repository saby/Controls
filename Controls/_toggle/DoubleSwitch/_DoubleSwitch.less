.controls-DoubleSwitch__toggle {
   .inline-flexbox();
   .align-items(center);
   .baseline-fix();
   border-style: solid;
   user-select: none;
   position: relative;
}

.controls-DoubleSwitch__toggle_theme-@{themeName} {
   border-width: @border-thickness_switcher;
   border-color: @border-color_switcher;
   border-radius: @border-radius_switcher;
}

.controls-DoubleSwitch_theme-@{themeName} {
   font-size: @font-size_switcher;
}

.controls-DoubleSwitch__wrapper {
   display: inline-flex;
   width: 100%;
}

.controls-DoubleSwitch__toggle_enabled {
   cursor: pointer;
}

.controls-DoubleSwitch__toggle_horizontal_theme-@{themeName} {
   margin: 0 @text_offset_switcher;
   width: @width_switcher;
   height: @height_horizontal_switcher;
}

.controls-DoubleSwitch__toggle_vertical {
   .flex-direction(column);
   margin: 0;
}

.controls-DoubleSwitch__toggle_vertical_theme-@{themeName} {
   width: @height_horizontal_switcher;
   height: @height_vertical_switcher;
   &:before {
      height: 0;
      line-height: @font-size_switcher;
   }
}

.controls-DoubleSwitch__toggle_horizontal_notChecked {
   .flex-direction(row-reverse);
}

.controls-DoubleSwitch__textBlock {
   .inline-flexbox();
   .flex-direction(column);
   justify-content: space-between;
   flex: 1;
   overflow: hidden;
}

.controls-DoubleSwitch__textBlock_theme-@{themeName} {
   margin-left: @text_offset_switcher;
}

.controls-DoubleSwitch__line_horizontal {
   position: relative;
}

.controls-DoubleSwitch__line_vertical {
   position: relative;
}

.controls-DoubleSwitch__fake-element {
   height: @height_vertical_switcher - @marker_height_switcher - @marker_border-offset_switcher;
}

.controls-DoubleSwitch__fake-element_active {
   //Нельзя делать через column-reverse, т.к. иначе базовая линия начинает браться не с того элемента и всё едет
   order: 1;
}

.controls-DoubleSwitch__fake-element_inactive {
   order: 0;
}

.controls-DoubleSwitch__text_vertical_theme-@{themeName} {
   //If border is in height text block base line between text and toggle circle deviates to switch border height.
   //In vertical state width = height, height = width.
   height: @height_vertical_switcher / 2 - @border-thickness_switcher;
   line-height: @height_vertical_switcher / 2;
}

.controls-DoubleSwitch__text_vertical {
   display: block;
   .text-overflow();
}

.controls-DoubleSwitch__text_enabled_unselected_theme-@{themeName} {
   color: @unselected_text-color_switcher;
}

.controls-DoubleSwitch__text_enabled_unselected {
   cursor: pointer;
}

.controls-DoubleSwitch__text_disabled_unselected_theme-@{themeName} {
   color: @readonly_unselected_text-color_switcher;
}
.controls-DoubleSwitch__text_enabled_selected {
   cursor: pointer;
}
.controls-DoubleSwitch__text_enabled_selected_theme-@{themeName} {
   color: @text-color_switcher;
}

.controls-DoubleSwitch__text_disabled_selected_theme-@{themeName} {
   color: @readonly_text-color_switcher;
}

.ws-is-hover {
   .controls-DoubleSwitch__text_enabled_unselected_theme-@{themeName}:hover {
      text-decoration: underline;
   }

   // CSS cascade is needed because you can move mouse to any place of toggle, and internal part of it must be highlighted.
   // Two hover class because first hover class set in js.
   .controls-DoubleSwitcher__toggle_hover, .controls-DoubleSwitch__toggle:hover {
      .controls-SwitchCircle__borderCircle_selected_theme-@{themeName},
      .controls-SwitchCircle__borderCircle_unselected_theme-@{themeName} {
         stroke: @marker-box_hover_border-color_switcher;
      }
   }
}

//touch on switcher
.controls-DoubleSwitch:active {
   .controls-SwitchCircle__borderCircle_selected_theme-@{themeName},
   .controls-SwitchCircle__borderCircle_unselected_theme-@{themeName} {
      stroke: @marker-box_hover_border-color_switcher;
   }
}

.controls_DoubleSwitch_SwitchCircle_vertical_theme-@{themeName} {
   margin-top: @marker_border-offset_switcher - @border-thickness_switcher;
   margin-bottom: @marker_border-offset_switcher - @border-thickness_switcher;
}

.controls_DoubleSwitch_SwitchCircle_horizontal_theme-@{themeName} {
   margin-right: @marker_border-offset_switcher - @border-thickness_switcher;
   margin-left: @marker_border-offset_switcher - @border-thickness_switcher;
}
