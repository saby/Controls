<ws:template name="itemActionsTemplateChooser">
   <ws:if data="{{itemData.isSwiped}}">
      <ws:partial template="{{swipeTemplate}}"
                  itemData="{{itemData}}"
                  itemActionsTemplate="{{itemActionsTemplate}}"
                  itemActionsContainerStyles="{{itemActionsContainerStyles}}"
                  highlightOnHover="{{highlightOnHover}}"/>
   </ws:if>
   <ws:else data="{{itemData.itemActionsPosition !== 'custom'}}">
      <ws:partial template="{{itemActionsTemplate}}"
                  itemActionsClass="{{itemActionsClass}}"
                  itemData="{{itemData}}"
                  itemActionsContainerStyles="{{itemActionsContainerStyles}}"
                  attr:class="controls-Grid__itemAction"
                  highlightOnHover="{{highlightOnHover}}"/>
   </ws:else>
</ws:template>

<ws:template name="cellPartialTemplate">
   <ws:if data="{{itemData.hasMultiSelect && currentColumn.columnIndex === 1 || !itemData.hasMultiSelect && currentColumn.columnIndex === 0}}">
      <ws:if data="{{!withoutLevelPadding && itemData.level > 1}}">
         <ws:for data="i in itemData.level - 1">
            <div class="controls-TreeGrid__row-levelPadding {{itemData.getLevelIndentClasses(expanderSize, levelIndentSize)}}"></div>
         </ws:for>
      </ws:if>
      <ws:if data="{{itemData.shouldDrawExpander(itemData, expanderIcon)}}">
         <ws:partial template="{{itemData.expanderTemplate}}" itemData="{{itemData}}" expanderIcon="{{expanderIcon}}" expanderSize="{{expanderSize}}"/>
      </ws:if>
      <ws:else data="{{itemData.shouldDrawExpanderPadding(itemData, expanderIcon, expanderSize)}}">
         <div class="{{itemData.getExpanderPaddingClasses(expanderSize, _options.theme)}} js-controls-ListView__notEditable"></div>
      </ws:else>
   </ws:if>
   <ws:if data="{{colspan}}" >
         <div class="controls-Grid__row-cell_colspaned {{currentColumn.classList.padding.top}} {{currentColumn.classList.padding.bottom}} {{currentColumn.classList.padding.right}}">
            <ws:partial template="{{colspanTemplate}}" itemData="{{itemData}}" expanderTemplate="{{itemData.expanderTemplate}}"/>
         </div>
   </ws:if>
   <ws:else>
      <ws:partial template="{{currentColumn.template}}"
                  editArrowTemplate="{{editArrowTemplate}}"
                  attr:class="{{currentColumn.column.align ? ' controls-Grid__row-cell__content_halign_' + currentColumn.column.align : ''}}
                  {{currentColumn.column.valign ?' controls-Grid__cell_valign_' + currentColumn.column.valign + ' controls-Grid__cell-content_full-height' : ''}}
                  {{itemData.isRightSwiped ? ' controls-ListView__item_rightSwipeAnimation'}}"
                  ladderWrapper="{{currentColumn.ladderWrapper}}"
                  expanderTemplate="{{itemData.expanderTemplate}}"
                  itemData="{{currentColumn}}" />
   </ws:else>
   <ws:if data="{{!itemData.columnScroll && itemData.isDrawActions(itemData, currentColumn, colspan || colspanCurrentNode)}}">
      <ws:partial template="itemActionsTemplateChooser"/>
   </ws:if>
</ws:template>

<ws:template name="columnContent">
   <ws:if data="{{itemData.hasMultiSelect && currentColumn.columnIndex === 0}}">
      <ws:partial template="{{multiSelectTpl}}" attr:class="{{itemData.multiSelectClassList}}">
         <ws:templateOptions triState="{{itemData.item[itemData.nodeProperty] !== null}}"
                             checkboxReadOnly="{{itemData.isAdd || checkboxReadOnly}}"
                             multiSelectStatus="{{itemData.multiSelectStatus}}"
                             key="{{itemData.key}}" />
      </ws:partial>
   </ws:if>
   <ws:else>
      <ws:partial template="cellPartialTemplate"/>
   </ws:else>
</ws:template>
<ws:template name="stickyLadderTpl">
   <ws:if data="{{itemData.styleLadderHeading && currentColumn.hiddenForLadder}}">
      <div attr:class="controls-Grid__row-ladder-cell {{!!itemData.isActive && highlightOnHover !== false ? ' controls-GridView__item_active_theme-' + _options.theme}}{{!!itemData.isDragging ? ' controls-ListView__item_dragging'}} js-controls-SwipeControl__actionsContainer"
           attr:key="{{itemData.key + '_sticky_ladder'}}"
           attr:style="{{itemData.styleLadderHeading}}">
         <Controls.scroll:StickyHeader position="topbottom" backgroundStyle="{{backgroundStyle}}" mode="replaceable">
            <ws:partial template="columnContent" currentColumn="{{currentColumn}}" attr:class="{{itemData.getClassesLadderHeading(currentColumn, _options.theme)}}"/>
         </Controls.scroll:StickyHeader>
      </div>
   </ws:if>
</ws:template>
<ws:template name="columnContentWrapper">
   <ws:if data="{{itemData.shouldDrawMarker(marker, currentColumn.columnIndex)}}">
      <div attr:class="{{itemData.getMarkerClasses(itemData.rowSeparatorVisibility)}}"></div>
   </ws:if>
   <div if="{{!!itemData.dragTargetNode}}" class="controls-TreeGridView__dragTargetNode_theme-{{_options.theme}} {{currentColumn.columnIndex === 0 ? 'controls-TreeGridView__dragTargetNode_first_theme-' + _options.theme}}
                                 {{currentColumn.columnIndex === itemData.getLastColumnIndex() ? 'controls-TreeGridView__dragTargetNode_last_theme-' + _options.theme}}"></div>
   <ws:partial template="columnContent"
               attr:class="{{currentColumn.hiddenForLadder ? 'controls-Grid__row-cell__content_hiddenForLadder'}}
                           {{itemData.styleLadderHeading ? 'controls-Grid__row-cell__content_ladderHeader'}}"/>
</ws:template>

<ws:template name="colTpl">
   <ws:partial template="stickyLadderTpl" currentColumn="{{currentColumn}}"/>
   <ws:if data="{{itemData.columnScroll && colspan && (itemData.hasMultiSelect ? currentColumn.columnIndex !== 0 : true)}}">
      <ws:if data="{{itemData.columnScroll && itemData.isDrawActions(itemData, currentColumn, colspan || colspanCurrentNode) && itemData.itemActionsDrawPosition === 'before' }}">
         <ws:partial template="itemActionsTemplateChooser" itemActionsContainerStyles="{{currentColumn.gridCellStyles}} {{itemData.getColspanForColumnScroll().actions}}" attr:key="{{itemData.key}}_{{itemData.getCurrentColumnKey()}}_actions"/>
      </ws:if>
      <div style="display: contents">
         <div attr:class="{{currentColumn.classList.base.replace('controls-Grid__cell_fixed', '')}} {{currentColumn.classList.columnScroll}}
                          {{currentColumn.columnIndex === 0 && !itemData.hasMultiSelect ? currentColumn.classList.padding.left}}
                          {{itemData.hasMultiSelect && currentColumn.columnIndex === 0 ? currentColumn.classList.padding.getAll()}}
                          {{!!itemData.isActive && highlightOnHover !== false ? ' controls-GridView__item_active_theme-' + _options.theme}}
                                   {{!!itemData.isDragging ? ' controls-ListView__item_dragging'}}
                                   {{!!itemData.dragTargetNode ? ' js-controls-TreeView__dragTargetNode'}}
                                   controls-TreeGrid__row js-controls-SwipeControl__actionsContainer"
              attr:style="{{currentColumn.gridCellStyles + itemData.getCellStyle(itemData, currentColumn, false).replace('controls-Grid__cell_fixed', '') }} {{itemData.getColspanForColumnScroll().fixedColumns}}">
            <ws:partial template="columnContentWrapper"/>
         </div>
         <div attr:class="{{currentColumn.classList.base.replace('controls-Grid__cell_fixed', '')}} {{currentColumn.classList.columnScroll}} {{!!itemData.isActive && highlightOnHover !== false ? ' controls-GridView__item_active_theme-' + _options.theme}}
                                   {{currentColumn.columnIndex === 0 && !itemData.hasMultiSelect ? currentColumn.classList.padding.left}}
                                   {{itemData.hasMultiSelect && currentColumn.columnIndex === 0 ? currentColumn.classList.padding.getAll()}}
                                   {{!!itemData.isDragging ? ' controls-ListView__item_dragging'}}
                                   {{!!itemData.dragTargetNode ? ' js-controls-TreeView__dragTargetNode'}}
                                   controls-TreeGrid__row js-controls-SwipeControl__actionsContainer controls-Grid__cell_transform"
              attr:style="{{currentColumn.gridCellStyles}} {{itemData.getCellStyle(itemData, currentColumn, false).replace('controls-Grid__cell_fixed', '')}} {{itemData.getColspanForColumnScroll().scrollableColumns}}"></div>
      </div>
   </ws:if>
   <ws:else>
      <ws:if data="{{itemData.columnScroll && itemData.isDrawActions(itemData, currentColumn, colspan || colspanCurrentNode) && itemData.itemActionsDrawPosition === 'before' }}">
         <ws:partial template="itemActionsTemplateChooser" itemActionsContainerStyles="{{currentColumn.gridCellStyles}}" attr:key="{{itemData.key}}_{{itemData.getCurrentColumnKey()}}_actions"/>
      </ws:if>
      <div attr:class="{{currentColumn.classList.base}} {{currentColumn.classList.columnScroll}}
                          {{ currentColumn.columnIndex === 0 && !itemData.hasMultiSelect ? currentColumn.classList.padding.left }}
                          {{itemData.hasMultiSelect && currentColumn.columnIndex === 0 ? currentColumn.classList.padding.getAll()}}
                          {{!!itemData.isActive && highlightOnHover !== false ? ' controls-GridView__item_active_theme-' + _options.theme}}
                                   {{!!itemData.isDragging ? ' controls-ListView__item_dragging'}}
                                   {{!!itemData.dragTargetNode ? ' js-controls-TreeView__dragTargetNode'}}
                                   controls-TreeGrid__row js-controls-SwipeControl__actionsContainer"
           attr:style="{{currentColumn.gridCellStyles + itemData.getCellStyle(itemData, currentColumn, colspan || colspanCurrentNode) }}">
         <ws:partial template="columnContentWrapper"/>
      </div>
   </ws:else>
   <ws:if data="{{itemData.columnScroll && itemData.itemActionsDrawPosition === 'after' }}">
      <ws:if data="{{ itemData.isDrawActions(itemData, currentColumn, colspan || colspanCurrentNode) }}">
         <ws:partial template="itemActionsTemplateChooser" itemActionsContainerStyles="{{currentColumn.itemActionsGridCellStyles}}" attr:key="{{itemData.key}}_{{itemData.getCurrentColumnKey()}}_actions"/>
      </ws:if>
      <ws:else data="{{ itemData.isActionsColumn(itemData, currentColumn, colspan || colspanCurrentNode) }}">
         <div attr:key="{{itemData.key}}_{{itemData.getCurrentColumnKey()}}_actionsStub"></div>
      </ws:else>
   </ws:if>
</ws:template>

<ws:template name="stickyCell">
   <ws:if data="{{ itemData.columnScroll && itemData.itemActionsDrawPosition === 'before' }}">
      <ws:if data="{{ itemData.isDrawActions(itemData, currentColumn, colspan || colspanCurrentNode) }}">
         <ws:partial template="itemActionsTemplateChooser" itemActionsContainerStyles="{{currentColumn.gridCellStyles}}"/>
      </ws:if>
      <ws:else>
         <div></div>
      </ws:else>
   </ws:if>
   <Controls.scroll:StickyHeader position="topbottom" backgroundStyle="{{backgroundStyle}}"
                                 attr:class="{{currentColumn.classList.base}} {{currentColumn.classList.columnScroll}}
                                   {{ currentColumn.columnIndex === 0 && !itemData.hasMultiSelect ? currentColumn.classList.padding.left }}
                                   {{itemData.hasMultiSelect && currentColumn.columnIndex === 0 ? currentColumn.classList.padding.getAll()}}
                                   {{!!itemData.isDragging ? ' controls-ListView__item_dragging'}}
                                   {{!!itemData.dragTargetNode ? ' js-controls-TreeView__dragTargetNode'}}
                                   controls-TreeGrid__row js-controls-SwipeControl__actionsContainer"
                                 attr:style="{{currentColumn.gridCellStyles + itemData.getCellStyle(itemData, currentColumn, colspan || colspanCurrentNode)}}">
      <ws:partial template="columnContentWrapper"/>
   </Controls.scroll:StickyHeader>
   <ws:if data="{{ itemData.columnScroll && itemData.itemActionsDrawPosition === 'after' }}">
      <ws:if data="{{ itemData.isDrawActions(itemData, currentColumn, colspan || colspanCurrentNode) }}">
         <ws:partial template="itemActionsTemplateChooser" itemActionsContainerStyles="{{currentColumn.itemActionsGridCellStyles}}"/>
      </ws:if>
      <ws:else data="{{ itemData.isActionsColumn(itemData, currentColumn, colspan || colspanCurrentNode) }}">
         <div></div>
      </ws:else>
   </ws:if>
</ws:template>

<ws:if data="{{itemData.isSticky}}">
   <Controls.scroll:Group>
      <div class="controls-Grid__row {{itemData.calcCursorClasses(clickable, cursor)}} {{highlightOnHover !== false ? 'controls-Grid__row_highlightOnHover_' + (itemData.style || 'default') + '_theme-' + _options.theme}} controls-Grid__row_{{itemData.style || 'default'}}_theme-{{_options.theme}}">
         <!-- The iterator does not restart when the model changes. Instead, the internal partial is redrawn. We do a reboot forcibly. -->
         <!-- Delete after the task is done https://online.sbis.ru/opendoc.html?guid=13786a2a-54c7-4a09-8fbc-11344cf0804d -->
         <ws:if data="{{colspanNodes && itemData.dispItem.isNode()}}">
            {{itemData.resetColumnIndex();}}
            <ws:if data="{{itemData.hasMultiSelect}}">
               <ws:partial template="stickyCell" currentColumn="{{itemData.getCurrentColumn()}}" attr:class="{{className}}"/>
               {{itemData.goToNextColumn();}}
            </ws:if>
            <ws:partial template="stickyCell" currentColumn="{{itemData.getCurrentColumn()}}" colspanCurrentNode="{{true}}" attr:class="{{className}}"/>
         </ws:if>
         <ws:else>
            <ws:for data="itemData.resetColumnIndex(); itemData.isLastColumn(itemData, colspan); itemData.goToNextColumn();">
               <ws:partial template="stickyCell" attr:key="{{itemData.getCurrentColumnKey()}}" currentColumn="{{itemData.getCurrentColumn()}}" attr:class="{{className}}"/>
            </ws:for>
         </ws:else>
      </div>
   </Controls.scroll:Group>
</ws:if>
<ws:else>
   <div attr:class="controls-Grid__row {{itemData.calcCursorClasses(clickable, cursor)}} {{highlightOnHover !== false ? 'controls-Grid__row_highlightOnHover_' + (itemData.style || 'default') + '_theme-' + _options.theme}} controls-Grid__row_{{itemData.style || 'default'}}_theme-{{_options.theme}}">
      <ws:if data="{{colspanNodes && itemData.dispItem.isNode()}}">
         {{itemData.resetColumnIndex();}}
         <ws:if data="{{itemData.hasMultiSelect}}">
            <ws:partial template="colTpl" attr:key="{{itemData.key}}_{{itemData.getCurrentColumnKey()}}" currentColumn="{{itemData.getCurrentColumn()}}" attr:class="{{className}}"/>
            {{itemData.goToNextColumn();}}
         </ws:if>
         <ws:partial template="colTpl" attr:key="{{itemData.key}}_{{itemData.getCurrentColumnKey()}}" currentColumn="{{itemData.getCurrentColumn()}}" colspanCurrentNode="{{true}}" attr:class="{{className}}"/>
      </ws:if>
      <ws:else>
         <ws:for data="itemData.resetColumnIndex(); itemData.isLastColumn(itemData, colspan); itemData.goToNextColumn();">
            <ws:partial template="colTpl" attr:key="{{itemData.key}}_{{itemData.getCurrentColumnKey()}}" currentColumn="{{itemData.getCurrentColumn()}}" attr:class="{{className}}"/>
         </ws:for>
      </ws:else>
   </div>
</ws:else>
