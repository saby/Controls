<ws:template name="itemActionsTemplateChooser">
   <ws:if data="{{itemData.isSwiped()}}">
      <ws:partial template="{{swipeTemplate}}"
                  itemData="{{itemData}}"
                  itemActionsTemplate="{{itemActionsTemplate}}"
                  itemActionsContainerStyles="{{itemActionsContainerStyles}}"
                  attr:class="js-controls-ColumnScroll__notDraggable"
                  highlightOnHover="{{highlightOnHover}}"
                  theme="{{_options.theme}}"/>
   </ws:if>
   <ws:else data="{{itemData.itemActionsPosition !== 'custom'}}">
      <ws:partial template="{{itemActionsTemplate}}"
                  itemActionsClass="{{itemActionsClass}}"
                  itemData="{{itemData}}"
                  itemActionsContainerStyles="{{itemActionsContainerStyles}}"
                  attr:class="controls-Grid__itemAction js-controls-ColumnScroll__notDraggable"
                  highlightOnHover="{{highlightOnHover}}"
                  theme="{{_options.theme}}"/>
   </ws:else>
</ws:template>

<ws:template name="colspanCell">
         <div class="controls-Grid__row-cell_colspaned
         {{currentColumn.getColspanedPaddingClassList(currentColumn, colspan).top}}
         {{currentColumn.getColspanedPaddingClassList(currentColumn, colspan).bottom}}
         {{currentColumn.getColspanedPaddingClassList(currentColumn, colspan).right}}">
            <ws:partial template="{{colspanTemplate}}" itemData="{{itemData}}" expanderTemplate="{{itemData.expanderTemplate}}"/>
         </div>
</ws:template>

<ws:template name="separatedCell">
      <!-- При горизонтальном скролле хлебные крошки выводятся без колспанов (крошка в первой ячейке, остальные пустые, разделитель колонок скрыт). -->
      <!-- Этот механизм вызывает шаблон колонок, как при обычном рендере. -->
      <!-- Не нужно ренднрить контент ячейки, если это не ячейка с colspanTemplate-->
      <ws:partial template="{{ renderSeparatedColumnContent !== false ? currentColumn.template : 'Controls/grid:ColumnTemplate' }}"
                  editArrowTemplate="{{editArrowTemplate}}"
                  itemActionsTemplate="{{itemActionsTemplate}}"
                  attr:class="{{currentColumn.column.align ? ' controls-Grid__row-cell__content_halign_' + currentColumn.column.align : ''}}
                              {{currentColumn.column.valign ?' controls-Grid__cell_valign_' + currentColumn.column.valign + ' controls-Grid__cell-content_full-height' : ''}}
                              {{itemData.isRightSwiped() ? ' controls-ListView__item_rightSwipeAnimation'}}"
                  ladderWrapper="{{currentColumn.ladderWrapper}}"
                  expanderTemplate="{{itemData.expanderTemplate}}"
                  itemData="{{currentColumn}}" />
</ws:template>

<ws:template name="partialColspanCell">
   <ws:if data="{{ currentColumn.columnIndex === (itemData.hasMultiSelect ? 1 : 0) }}">
      <!-- Растянутая колонка -->
      <ws:partial template="colspanCell"/>
   </ws:if>
   <ws:else data="{{ currentColumn.columnIndex >= (colspanLength + (itemData.hasMultiSelect ? 1 : 0)) }}">
      <!-- Оставшиеся колонки -->
      <ws:partial template="separatedCell"/>
   </ws:else>
</ws:template>

<ws:template name="cellPartialTemplate">
   <ws:if data="{{itemData.hasMultiSelect && currentColumn.columnIndex === 1 || !itemData.hasMultiSelect && currentColumn.columnIndex === 0}}">
      <ws:if data="{{!withoutLevelPadding && itemData.level > 1}}">
         <ws:for data="i in itemData.level - 1">
            <div class="controls-TreeGrid__row-levelPadding {{itemData.getLevelIndentClasses(itemData.getExpanderSize(expanderSize), levelIndentSize)}}"></div>
         </ws:for>
      </ws:if>
      <ws:if data="{{itemData.shouldDrawExpander(itemData, expanderIcon)}}">
         <ws:partial template="{{itemData.expanderTemplate}}" itemData="{{itemData}}" expanderIcon="{{expanderIcon}}" expanderSize="{{itemData.getExpanderSize(expanderSize)}}"/>
      </ws:if>
      <ws:else data="{{itemData.shouldDrawExpanderPadding(itemData, expanderIcon, itemData.getExpanderSize(expanderSize))}}">
         <div class="{{itemData.getExpanderPaddingClasses(itemData.getExpanderSize(expanderSize), _options.theme)}} js-controls-ListView__notEditable"></div>
      </ws:else>
   </ws:if>

   <ws:partial if="{{ itemData.getColspanType(_options) === 'full' }}" template="colspanCell"/>
   <ws:partial if="{{ itemData.getColspanType(_options) === 'partial' }}" template="partialColspanCell"/>
   <ws:partial if="{{ itemData.getColspanType(_options) === 'none' }}" template="separatedCell"/>

   <ws:if data="{{!itemData.columnScroll && itemData.isDrawActions(itemData, currentColumn, colspan || colspanCurrentNode)}}">
      <ws:partial template="itemActionsTemplateChooser"/>
   </ws:if>
</ws:template>

<ws:template name="columnContent">
   <ws:if data="{{itemData.hasMultiSelect && currentColumn.columnIndex === 0}}">
      <ws:partial template="{{multiSelectTpl}}" attr:class="{{itemData.multiSelectClassList}}">
         <ws:templateOptions triState="{{itemData.item[itemData.nodeProperty] !== null}}"
                             checkboxReadOnly="{{itemData.isAdd || checkboxReadOnly}}"
                             multiSelectStatus="{{itemData.multiSelectStatus}}"
                             key="{{itemData.key}}" />
      </ws:partial>
   </ws:if>
   <ws:else>
      <ws:partial template="cellPartialTemplate"/>
   </ws:else>
</ws:template>

<ws:template name="ladderStickyHeader">
   <Controls.scroll:StickyHeader position="topbottom" backgroundStyle="{{'transparent'}}"
                                 shadowVisibility="hidden"
                                 mode="replaceable">
      <ws:partial template="columnContent" currentColumn="{{currentColumn}}" ladderWrapperClass="controls-Grid__cell-content-wrapper_ladder" stickyProperty="{{stickyProperty}}" attr:class="{{itemData.getClassesLadderHeading(currentColumn, _options.theme)}}"/>
   </Controls.scroll:StickyHeader>
</ws:template>

<ws:template name="stickyLadderTpl">
   <ws:if data="{{itemData.stickyLadder[stickyProperty].headingStyle && currentColumn.hiddenForLadder}}">
      <div attr:class="controls-Grid__row-ladder-cell {{!!itemData.isActive() ? ' controls-GridView__item_active_theme-' + _options.theme}}{{!!itemData.isDragging ? ' controls-ListView__item_dragging_theme-' + _options.theme}} js-controls-SwipeControl__actionsContainer"
           attr:key="{{itemData.key + stickyProperty + '_sticky_ladder'}}"
           attr:style="{{itemData.stickyLadder[stickyProperty].headingStyle}}">

         <ws:if data="{{itemData.stickyProperties[index]}}">
            <ws:if data="{{index === 1}}">
               <div class="controls-Grid__row-additional_ladderWrapper" style="left: -125px;">
                  <ws:partial template="ladderStickyHeader" attr:class="{{itemData.getAdditionalLadderClasses()}}" attr:style="z-index: 1" currentColumn="{{currentColumn}}" stickyProperty="{{stickyProperty}}"/>
               </div>
            </ws:if>
            <ws:else>
               <ws:partial template="ladderStickyHeader"  attr:style="z-index: 2" currentColumn="{{currentColumn}}" stickyProperty="{{stickyProperty}}"/>
            </ws:else>
         </ws:if>
      </div>
   </ws:if>
</ws:template>

<ws:template name="stickyLadderByIndex">
   <ws:if data="{{itemData.stickyProperties[index]}}">
      <ws:partial template="stickyLadderTpl" currentColumn="{{currentColumn}}" index="{{index}}" stickyProperty="{{itemData.stickyProperties[index]}}"/>
   </ws:if>
</ws:template>
<ws:template name="columnContentWrapper">
   <ws:if data="{{itemData.shouldDrawMarker(marker, currentColumn.columnIndex)}}">
      <div attr:class="{{itemData.getMarkerClasses()}}"></div>
   </ws:if>
   <div if="{{!!itemData.dragTargetNode}}" class="controls-TreeGridView__dragTargetNode_theme-{{_options.theme}} {{currentColumn.columnIndex === 0 ? 'controls-TreeGridView__dragTargetNode_first_theme-' + _options.theme}}
                                 {{currentColumn.columnIndex === itemData.getLastColumnIndex() ? 'controls-TreeGridView__dragTargetNode_last_theme-' + _options.theme}}"></div>
   <ws:partial template="columnContent"
               attr:class="{{currentColumn.hiddenForLadder && !colspan ? 'controls-Grid__row-cell__content_hiddenForLadder'}}
                           {{itemData.styleLadderHeading ? 'controls-Grid__row-cell__content_ladderHeader'}}"/>
</ws:template>

<ws:template name="colTpl">
   <ws:partial template="stickyLadderByIndex" currentColumn="{{currentColumn}}" index="{{0}}"/>

   <ws:if data="{{itemData.columnScroll && itemData.isDrawActions(itemData, currentColumn, colspan || colspanCurrentNode) && itemData.itemActionsDrawPosition === 'before' }}">
      <ws:partial template="itemActionsTemplateChooser" itemActionsContainerStyles="{{currentColumn.gridCellStyles}}" attr:key="{{itemData.key}}_{{itemData.getCurrentColumnKey()}}_actions"/>
   </ws:if>
   <ws:if data="{{(colspan === false && !!colspanLength) ? ( (currentColumn.columnIndex <= (itemData.hasMultiSelect ? 1 : 0)) || (currentColumn.columnIndex >= ((itemData.hasMultiSelect ? 1 : 0) + colspanLength))) : true}}">
      <div attr:class="{{currentColumn.classList.base}} {{currentColumn.classList.columnScroll}} {{ cellClassName || '' }}
                       {{ itemData.shouldHighlightRow(marker) ? itemData.getSelectedClasses() }}
                       {{ currentColumn.columnIndex === 0 && !itemData.hasMultiSelect ? currentColumn.classList.padding.left }}
                       {{itemData.hasMultiSelect && currentColumn.columnIndex === 0 ? currentColumn.classList.padding.getAll()}}
                       {{!!itemData.isActive() && highlightOnHover !== false ? ' controls-GridView__item_active_theme-' + _options.theme}}
                                {{!!itemData.isDragging ? ' controls-ListView__item_dragging_theme-' + itemData.theme}}
                                {{!!itemData.dragTargetNode ? ' js-controls-TreeView__dragTargetNode'}}
                                controls-TreeGrid__row js-controls-SwipeControl__actionsContainer"
           attr:style="{{currentColumn.gridCellStyles + itemData.getCellStyle(itemData, currentColumn, colspan || colspanCurrentNode) }}
                       {{ (colspan === false && !!colspanLength) && (currentColumn.columnIndex === (itemData.hasMultiSelect ? 1 : 0)) ? itemData.getPartialColspanStyles(itemData.hasMultiSelect ? 1 : 0, colspanLength) }}">
      <ws:partial template="columnContentWrapper"/>
   </div>
   </ws:if>
   <ws:partial template="stickyLadderByIndex" currentColumn="{{currentColumn}}" index="{{1}}"/>
   <ws:if data="{{itemData.columnScroll && itemData.itemActionsDrawPosition === 'after' }}">
      <ws:if data="{{ itemData.isDrawActions(itemData, currentColumn, colspan || colspanCurrentNode) }}">
         <ws:partial template="itemActionsTemplateChooser" itemActionsContainerStyles="{{currentColumn.itemActionsGridCellStyles}}" attr:key="{{itemData.key}}_{{itemData.getCurrentColumnKey()}}_actions"/>
      </ws:if>
      <ws:else data="{{ itemData.isActionsColumn(itemData, currentColumn, colspan || colspanCurrentNode) }}">
         <div attr:key="{{itemData.key}}_{{itemData.getCurrentColumnKey()}}_actionsStub"></div>
      </ws:else>
   </ws:if>
</ws:template>

<ws:template name="stickyCell">
   <ws:if data="{{ itemData.columnScroll && itemData.itemActionsDrawPosition === 'before' }}">
      <ws:if data="{{ itemData.isDrawActions(itemData, currentColumn, colspan || colspanCurrentNode) }}">
         <ws:partial template="itemActionsTemplateChooser" itemActionsContainerStyles="{{currentColumn.gridCellStyles}}"/>
      </ws:if>
      <ws:else>
         <div></div>
      </ws:else>
   </ws:if>
   <!-- сюда попадаем только в случае застиканной записи в мастер или мастер классик, константа стиля находится в itemData.style -->
   <Controls.scroll:StickyHeader position="topbottom" backgroundStyle="{{itemData.style + '_sticked'}}"
                                 mode="{{stickyMode}}"
                                 attr:class="{{currentColumn.classList.base}} {{currentColumn.classList.columnScroll}}
                                   {{ itemData.shouldHighlightRow(marker) ? itemData.getSelectedClasses() }}
                                   {{ currentColumn.columnIndex === 0 && !itemData.hasMultiSelect ? currentColumn.classList.padding.left }}
                                   {{itemData.hasMultiSelect && currentColumn.columnIndex === 0 ? currentColumn.classList.padding.getAll()}}
                                   {{!!itemData.isDragging ? ' controls-ListView__item_dragging_theme-' + itemData.theme}}
                                   {{!!itemData.dragTargetNode ? ' js-controls-TreeView__dragTargetNode'}}
                                   controls-TreeGrid__row js-controls-SwipeControl__actionsContainer"
                                 attr:style="{{currentColumn.gridCellStyles + itemData.getCellStyle(itemData, currentColumn, colspan || colspanCurrentNode)}}">
      <ws:partial template="columnContentWrapper"/>
   </Controls.scroll:StickyHeader>
   <ws:if data="{{ itemData.columnScroll && itemData.itemActionsDrawPosition === 'after' }}">
      <ws:if data="{{ itemData.isDrawActions(itemData, currentColumn, colspan || colspanCurrentNode) }}">
         <ws:partial template="itemActionsTemplateChooser" itemActionsContainerStyles="{{currentColumn.itemActionsGridCellStyles}}"/>
      </ws:if>
      <ws:else data="{{ itemData.isActionsColumn(itemData, currentColumn, colspan || colspanCurrentNode) }}">
         <div></div>
      </ws:else>
   </ws:if>
</ws:template>

<ws:if data="{{itemData.isStickedMasterItem}}">
   <Controls.scroll:Group>
      <div class="controls-Grid__row {{itemData.isLastItem ? 'controls-Grid__row_last'}} {{itemData.calcCursorClasses(clickable, cursor)}} {{highlightOnHover !== false ? 'controls-Grid__row_highlightOnHover_' + (itemData.style || 'default') + '_theme-' + _options.theme}} controls-Grid__row_{{itemData.style || 'default'}}_theme-{{_options.theme}}">
         <!-- The iterator does not restart when the model changes. Instead, the internal partial is redrawn. We do a reboot forcibly. -->
         <!-- Delete after the task is done https://online.sbis.ru/opendoc.html?guid=13786a2a-54c7-4a09-8fbc-11344cf0804d -->
         <ws:if data="{{colspanNodes && itemData.dispItem.isNode()}}">
            {{itemData.resetColumnIndex();}}
            <ws:if data="{{itemData.hasMultiSelect}}">
               <ws:partial template="stickyCell"
                           stickyMode="stackable"
                           currentColumn="{{itemData.getCurrentColumn(backgroundColorStyle)}}"
                           attr:class="{{className}}"/>
               {{itemData.goToNextColumn();}}
            </ws:if>
            <ws:partial template="stickyCell"
                        stickyMode="stackable"
                        currentColumn="{{itemData.getCurrentColumn(backgroundColorStyle)}}"
                        colspanCurrentNode="{{true}}"
                        attr:class="{{className}}"/>
         </ws:if>
         <ws:else>
            <ws:for data="itemData.resetColumnIndex(); itemData.isLastColumn(itemData, colspan); itemData.goToNextColumn();">
               <ws:partial template="stickyCell"
                           stickyMode="stackable"
                           attr:key="{{itemData.getCurrentColumnKey()}}"
                           currentColumn="{{itemData.getCurrentColumn(backgroundColorStyle)}}"
                           attr:class="{{className}}"/>
            </ws:for>
         </ws:else>
      </div>
   </Controls.scroll:Group>
</ws:if>
<ws:else>
   <div attr:class="controls-Grid__row {{itemData.isLastItem ? 'controls-Grid__row_last'}} {{itemData.calcCursorClasses(clickable, cursor)}} {{highlightOnHover !== false && !itemData.isEditingState() ? 'controls-Grid__row_highlightOnHover_' + (itemData.style || 'default') + '_theme-' + _options.theme}} controls-Grid__row_{{itemData.style || 'default'}}_theme-{{_options.theme}}">
      <ws:if data="{{colspanNodes && itemData.dispItem.isNode()}}">
         {{itemData.resetColumnIndex();}}
         <ws:if data="{{itemData.hasMultiSelect}}">
            <ws:partial template="colTpl" attr:key="{{itemData.key}}_{{itemData.getCurrentColumnKey()}}" currentColumn="{{itemData.getCurrentColumn(backgroundColorStyle)}}" attr:class="{{className}}"/>
            {{itemData.goToNextColumn();}}
         </ws:if>
         <ws:partial template="colTpl" attr:key="{{itemData.key}}_{{itemData.getCurrentColumnKey()}}" currentColumn="{{itemData.getCurrentColumn(backgroundColorStyle)}}" colspanCurrentNode="{{true}}" attr:class="{{className}}"/>
      </ws:if>
      <ws:else>
         <ws:for data="itemData.resetColumnIndex(); itemData.isLastColumn(itemData, colspan); itemData.goToNextColumn();">
            <ws:partial template="colTpl" attr:key="{{itemData.key}}_{{itemData.getCurrentColumnKey()}}" currentColumn="{{itemData.getCurrentColumn(backgroundColorStyle)}}" attr:class="{{className}}"/>
         </ws:for>
      </ws:else>
   </div>
</ws:else>
