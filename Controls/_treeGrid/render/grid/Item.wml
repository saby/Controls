<ws:template name="COLUMN">
   <div if="{{ gridColumn.shouldDisplayMarker(marker) }}"
        class="{{ gridColumn.getMarkerClasses(theme, style, markerClassName, itemPadding, markerPosition) }}"></div>

   <ws:if data="{{(item || itemData).shouldDisplayExpanderBlock(gridColumn)}}">
      <ws:if data="{{ (item || itemData).shouldDisplayLevelPadding(withoutLevelPadding) }}">
         <ws:for data="i in (item || itemData).getLevel() - 1">
            <div class="{{(item || itemData).getLevelIndentClasses(expanderSize, levelIndentSize)}}"></div>
         </ws:for>
      </ws:if>
      <ws:if data="{{ (item || itemData).shouldDisplayExpander(expanderIcon, 'default') }}">
         <div class="{{(item || itemData).getExpanderClasses((item || itemData).getExpanderIcon(expanderIcon), (item || itemData).getExpanderSize(expanderSize))}}"></div>
      </ws:if>
      <ws:else data="{{(item || itemData).shouldDisplayExpanderPadding(expanderIcon, expanderSize)}}">
         <div class="{{(item || itemData).getExpanderPaddingClasses(expanderSize)}}"></div>
      </ws:else>
   </ws:if>

   <ws:partial template="{{ gridColumn.getTemplate(multiSelectTpl) }}"
               attr:key="{{ gridColumn.getInstanceId() }}"
               item="{{ (item || itemData) }}"
               column="{{ gridColumn }}"
               itemData="{{ gridColumn }}"
               gridColumn="{{ gridColumn }}"
               colData="{{ gridColumn }}"
               theme="{{ theme }}"
               style="{{ style }}"
               cursor="{{ cursor }}"
               itemActionsTemplate="{{ itemActionsTemplate }}"
               itemActionsClass="{{ itemActionsClass }}"
               templateHighlightOnHover="{{ templateHighlightOnHover }}"
               tagTemplate="{{ gridColumn.TagCell ? tagTemplate }}"
               tagStyle="{{ gridColumn.TagCell ? tagStyle }}"
               editArrowTemplate="{{ editArrowTemplate }}">
      <ws:ladderWrapper>
         <ws:partial template="{{ladderWrapper.content}}"
                     if="{{ (item || itemData).shouldDrawLadderContent(ladderWrapper.ladderProperty, ladderWrapper.stickyProperty) }}"
                     attr:class="{{ (item || itemData).getLadderWrapperClasses(ladderWrapper.ladderProperty, ladderWrapper.stickyProperty) }}"/>
      </ws:ladderWrapper>
      <ws:templateOptions multiSelectStatus="{{ (item || itemData).isSelected() }}"
                          key="{{ (item || itemData).key }}"
                          checkboxReadOnly="{{ checkboxReadOnly }}"/>
      <ws:multiSelectTemplate>
         <ws:partial template="{{multiSelectTpl}}" _preventMergeOptions="{{ true }}">
            <ws:templateOptions item="{{ item }}" checkboxReadOnly="{{checkboxReadOnly}}"/>
         </ws:partial>
      </ws:multiSelectTemplate>
      <ws:afterContentTemplate>
         <!-- Стрелка редактирования. Если шаблон прикладной, то не показываем -->
         <ws:if data="{{ !contentTemplate && (gridColumn || itemData).shouldDisplayEditArrow() && editArrowTemplate }}">
            <ws:partial template="{{ editArrowTemplate }}" item="{{ (gridColumn || itemData).getOwner() }}" textOverflow="{{(gridColumn || itemData).config.textOverflow}}"/>
         </ws:if>

         <!-- Тэг -->
         <div if="{{ (gridColumn || itemData).TagCell && (gridColumn || itemData).shouldDisplayTag(afterContentTemplate.tagStyle) }}"
              class="{{ (gridColumn || itemData).getTagClasses(afterContentTemplate.theme) }}">
            <ws:partial template="{{ afterContentTemplate.tagTemplate }}"
                        tagStyle="{{ (gridColumn || itemData).getTagStyle(afterContentTemplate.tagStyle) }}"
                        dispItem="{{ (gridColumn || itemData).getOwner() }}"
                        columnIndex="{{ (gridColumn || itemData).getColumnIndex() }}"/>
         </div>

         <!-- Экспандер -->
         <ws:if data="{{ item.shouldDisplayExpanderBlock(gridColumn) && item.shouldDisplayExpander(afterContentTemplate.expanderIcon, 'right') }}">
            <div class="{{item.getExpanderClasses(item.getExpanderIcon(expanderIcon), item.getExpanderSize(expanderSize))}}"></div>
         </ws:if>
      </ws:afterContentTemplate>
   </ws:partial>

   <ws:if data="{{ gridColumn.ItemActionsCell && gridColumn.shouldDisplayItemActions() }}">
      <ws:if data="{{ (item || itemData).isSwiped() && itemActionsPosition !== 'outside' }}">
         <ws:partial template="{{ swipeTemplate }}"
                     highlightOnHover="{{ highlightOnHover }}" />
      </ws:if>
      <ws:else data="{{ itemActionsPosition !== 'custom' }}">
         <ws:partial template="{{ itemActionsTemplate }}"
                     itemData="{{ item || itemData }}"
                     itemActionsClass="{{ itemActionsClass }}"
                     highlightOnHover="{{ highlightOnHover }}"/>
      </ws:else>
   </ws:if>

   <ws:if data="{{ (item || itemData).Draggable && (item || itemData).shouldDisplayDraggingCounter() }}">
      <span class="controls-ListView__item-dragging-counter">{{(item || itemData).getDraggedItemsCount()}}</span>
   </ws:if>
</ws:template>


<ws:if data="{{ (item || itemData).isSticked() }}">
   <Controls.scroll:Group>
      <div class="{{ (item || itemData).getItemClasses({
           'highlightOnHover': highlightOnHover,
           'theme': theme,
           'style': style,
           'cursor': cursor,
           'clickable': clickable,
           'showItemActionsOnHover': showItemActionsOnHover
       }) }}">
         <ws:for data="column in (item || itemData).getColumns()">
            <Controls.scroll:StickyHeader position="topbottom"
                                          mode="{{ (item || itemData).getStickyHeaderMode() }}"
                                          shadowVisibility="{{column.shadowVisibility || 'lastVisible'}}"
                                          backgroundStyle="{{ backgroundStyle }}"
                                          fixedZIndex="{{ column.getZIndex()}}"
                                          attr:class="{{ column.getWrapperClasses(theme, backgroundColorStyle, style, highlightOnHover) }}"
                                          attr:style="{{ column.getWrapperStyles(containerSize) }}">
               <ws:partial template="COLUMN" gridColumn="{{ column }}"/>
            </Controls.scroll:StickyHeader>
         </ws:for>
      </div>
   </Controls.scroll:Group>
</ws:if>
<ws:else>
   <div class="{{ (item || itemData).getItemClasses({
           'highlightOnHover': highlightOnHover,
           'theme': theme,
           'style': style,
           'cursor': cursor,
           'clickable': clickable,
           'showItemActionsOnHover': showItemActionsOnHover
       }) }}">
      <ws:for data="column in (item || itemData).getColumns()">
         <div class="{{ column.getWrapperClasses(theme, backgroundColorStyle, style, highlightOnHover) }}"
              style="{{ column.getWrapperStyles(containerSize) }}">
            <ws:partial template="COLUMN" gridColumn="{{ column }}"/>
         </div>
      </ws:for>
   </div>
</ws:else>
