<div>
   <div class="event-example__wrapper">
      <div class="exampleBlock">
         <h3>Example</h3>
         <Controls.slider:Base
            scaleStep="{{_scaleStep}}"
            minValue="{{_minValue}}"
            maxValue="{{_maxValue}}"
            size="{{_size}}"
            precision="{{_precision}}"
            borderVisible="{{_borderVisible}}"
            readOnly="{{_readOnly}}"
            bind:value="_value"
            on:valueChanged="changeValue()"
         />
      </div>
      <div class="eventBlock">
         <div class="reset-header__wrapper">
             <span>Event that surfaced: {{_event}}</span>
             <Controls.buttons:Button attr:class="demo-ResetButton" on:click="reset()" fontColorStyle="unaccented" viewMode="linkButton" caption="reset"/>
         </div>
         <br/>
         <span>{{_eventName}}</span>
      </div>
   </div>
   <div class="optionsBlock">
      <h3>Options</h3>
      <Controls.input:Label caption="minValue:"/>
      <Controls.input:Number precision="{{_precision}}" on:valueChanged="changeMinValue()" value="{{_minValue}}" />
      <Controls.input:Label caption="maxValue:"/>
      <Controls.input:Number precision="{{_precision}}" on:valueChanged="changeMaxValue()" value="{{_maxValue}}" />
      <Controls.input:Label caption="value:"/>
      <Controls.input:Number precision="{{_precision}}" on:valueChanged="changeValue()" bind:value="_value" />
      <Controls.input:Label caption="scaleStep:"/>
      <Controls.input:Number precision="{{0}}" on:valueChanged="changeScaleStep()" bind:value="_scaleStep" />
      <Controls.input:Label caption="precision:"/>
      <Controls.input:Number precision="{{0}}" on:valueChanged="changePrecision()" bind:value="_precision" />
      <Controls.input:Label caption="size:"/>
      <Controls.dropdown:Combobox
         source="{{_sizeSource}}"
         keyProperty="title"
         placeholder="s"
         displayProperty="title"
         selectedKey="{{_size}}"
         on:selectedKeyChanged="changeSize()"
      />
      <Controls.toggle:Checkbox caption="borderVisible" on:valueChanged="changeBorderVisible()" bind:value="_borderVisible"/>
      <Controls.toggle:Checkbox caption="readOnly" on:valueChanged="changeReadOnly()" bind:value="_readOnly"/>

      </div>
</div>
